{"version":3,"sources":["misc/Explanation.ts","config.ts","misc/utils.ts","misc/Sequence.tsx","components/graph/Node.tsx","components/graph/Xmark.tsx","components/graph/Checkmark.tsx","components/CausalGraphThree.tsx","components/ButtonFooter.tsx","components/Image.tsx","components/ExplanationBubble.tsx","components/HistoryBar.tsx","sequences/SeqObservation.tsx","sequences/SeqSetComplete.tsx","sequences/SeqCausalGraphInference.tsx","sequences/SeqEnd.tsx","sequences/introduction/SeqInstructionsIntro.tsx","sequences/introduction/SeqConsentForm.tsx","sequences/introduction/SeqInstructionsCausalDevice.tsx","sequences/introduction/SeqInstructionsTask.tsx","sequences/introduction/SeqInstructionsExplanations.tsx","sequences/introduction/SeqInstructionsExplanationsDouble.tsx","sequences/introduction/SeqInstructionsExplanationsInactive.tsx","sequences/introduction/SeqInstructionsArrows.tsx","sequences/introduction/SeqComprehensionCheck1.tsx","sequences/introduction/SeqWhatHappened.tsx","components/survey/CompQuestion.tsx","sequences/introduction/SeqCompCheckExplanationsNew.tsx","sequences/introduction/SeqInstructionsNoCycles.tsx","sequences/sample_activation/SeqSampleActivation1.tsx","sequences/sample_activation/SeqSampleActivation2.tsx","sequences/sample_activation/SeqSampleActivation3.tsx","sequences/sample_activation/SeqSampleActivation4.tsx","sequences/sample_activation/SeqSampleActivation5.tsx","sequences/sample_activation/SeqSampleActivation6.tsx","sequences/sample_activation/SeqSampleActivation.tsx","components/survey/SelectQuestion.tsx","sequences/introduction/VocabQuiz.tsx","sequences/introduction/SeqCompanyIntroduction.tsx","sequences/introduction/SeqCompanyIntroduction2.tsx","sequences/introduction/SeqCompanyIntroduction3.tsx","sequences/introduction/SeqIntroduction.tsx","sequences/exit_survey/SeqExitSurvey1.tsx","sequences/exit_survey/SeqExitSurvey2.tsx","sequences/exit_survey/SeqExitSurvey3.tsx","sequences/exit_survey/SeqExitSurvey.tsx","sequences/SeqTrialsStart.tsx","sequences/SeqConditions.tsx","sequences/SeqMain.tsx","misc/Data.ts","misc/serviceLayer.ts","App.tsx","reportWebVitals.ts","index.tsx","components/graph/Edge.tsx"],"names":["_","require","getAllExplanations","explanations","node1","node2","nodes_active","cause","push","Explanation","sortBy","e","stringify","this","isValid","nodeA","nodeB","nodeC","edgeAB","edgeAC","edgeBC","undefined","Mode","None","eval","directMode","indirectMode","Forward","Backward","CONFIG","loadConfig","a","loadJSON","dev_mode","getUrlParams","getFlaskURL","host_url","flask_port","getPostURL","CryptoJS","timeFormat","now","moment","format","sleep","ms","Promise","resolve","setTimeout","parseString","str","s","toLowerCase","isNaN","parseFloat","isNumeric","mapToObject","collection","f","obj","kv","toUSD","n","to","precision","rounded","Math","round","Number","isInteger","toString","split","length","toFixed","max","Intl","NumberFormat","style","currency","minimumFractionDigits","getMidpoint","x1","y1","x2","y2","params","URL","window","location","href","searchParams","keys","Array","from","values","map","k","get","zipObject","filename","process","fetch","then","response","json","body","catch","error","console","log","httpGet","url","mode","headers","attemptPost","data","stringForm","JSON","checksum","MD5","method","text","httpPost","wait","retry","i","min","pow","Sequence","props","current_subsequence","current_idx","subsequence","boundHandleKeyDown","onKeyDown","handleKeyDown","bind","loadStateData","goToNext","goToPrev","sequence","getProps","clone","random","getCurrentSubsequenceIndex","Object","assign","React","createElement","class","constructor","name","completedCallback","freeze","getParams","state","loadSequenceState","setState","saveSequenceState","goBackCallback","getSubsequence","forceUpdate","scrollTo","onGoToNext","event","key","document","addEventListener","sequenceTimestamps","timestamp","removeEventListener","Component","Node","active","onClick","enableOnClick","fontSize","radius","x","y","stroke","strokeWidth","fill","label","width","height","fontStyle","align","verticalAlign","Xmark","points","size","color","Checkmark","CausalGraphThree","refEdgeAB","refEdgeAC","refEdgeBC","createRef","current","divHeight","sqrt","nodeCenters","nodeLabels","nodeActive","edgeLength","edgeWidth","edgeABCenter","edgeACCenter","edgeBCCenter","className","display","Edge","point1","point2","enableEdgeOnClick","disableShadow","disableEdgeShadow","ref","edgeABActive","edgeACActive","edgeBCActive","enableNodeOnClick","ButtonFooter","onBack","onNext","Image","filepath","src","caption","ExplanationBubble","textAlign","explanation","robotOnRight","renderRight","renderLeft","HistoryBar","observation","node","backgroundColor","activations","companies","obsIdx","justifyContent","value","observations","header","o","showActivations","col","nodeTemplate","showExplanations","SeqObservation","refGraph","startTime","refToast","showGraph","responseTime","edgeModes","getEdgeModes","trialResponses","setIndex","obsIndex","edges","loop","show","severity","summary","detail","life","recordResponse","experimentData","conditions","deviceName","trialSets","graphName","obsHistory","slice","padding","paddingLeft","minHeight","A","B","C","SeqSetComplete","idxLow","idxHigh","responses","filter","r","trialSet","zip","obs_res","marginBottom","numSolved","getNumEdgesSolved","totalSolved","sum","total","cumTotalSolved","getTotalEdgesSolved","reward_per_edge","getTrialResults","SeqCausalGraphInference","addSubsequence","getLastResponse","isLastSet","post","SeqEnd","bonus","completion_code","base_reward","SeqInstructionsIntro","SeqConsentForm","appx_duration","icon","SeqInstructionsCausalDevice","pRoot","graphParams","pEdge","pNonRoot","SeqInstructionsTask","selected","tutorial","obs","idx","inputId","onChange","checked","onSubmit","SeqInstructionsExplanations","marginTop","SeqInstructionsExplanationsDouble","SeqInstructionsExplanationsInactive","SeqInstructionsArrows","SeqComprehensionCheck1","questions","question","solution","q","qText","stateKey","paddingTop","suffix","forEach","recordQuestionResponse","solutions","isEqual","create_prob_question","SeqWhatHappened","day","description","paddingRight","CompQuestion","options","onCheckboxChange","splice","multiSelect","questionWidth","option","includes","htmlFor","SeqCompCheckExplanations","counter","colorMap","messageList","devices","d","index","messages","giveFeedback","num","graphTree","graphTrees","device","type","v","SeqInstructionsNoCycles","SeqSampleActivation1","SeqSampleActivation2","SeqSampleActivation3","SeqSampleActivation4","SeqSampleActivation5","SeqSampleActivation6","SeqSampleActivation","SelectQuestion","SeqCompanyIntroduction","SeqCompanyIntroduction2","SeqCompanyIntroduction3","SeqIntroduction","addVocabQuiz","addCompCheckExplanationSequenceActive","addCompCheckExplanationSequenceInactive","SeqVocabQuiz","SeqExitSurvey1","general","rows","cols","target","iconPos","SeqExitSurvey2","refSelectQuestions","age","SeqExitSurvey3","education","math","SeqExitSurvey","SeqTrialsStart","SeqConditions","SeqMain","Data","sessionParams","questionResponses","sequenceStates","setInterval","post_data_interval","prolificPid","getSequenceKey","createStateData","seq_params","seq_key","_sequence","_timestamp","solved","seqSolved","lastSetIndex","graphNames","shuffle","loadTrialSet","rawTrials","trialIdx","edge","graphType","graph_type","getNewExperimentData","trials","graph_params","p_root","p_nonroot","p_edge","App","dataLoaded","configLoaded","urlParams","studyId","sessionId","entries","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","opacity1","opacity2","onMouseEnter","onMouseLeave","closerTo1","midPoint","pointerLength","pointerWidth","opacity"],"mappings":"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","file":"static/js/main.8de44be7.chunk.js","sourcesContent":["import {Mode} from \"../components/graph/Edge\";\nconst _ = require('lodash');\n\nexport function getAllExplanations() {\n  /**\n   * Returns a list of all possible explanations\n   */\n  let explanations = [];\n  for (let node1 of ['A', 'B', 'C']) {\n    for (let node2 of ['A', 'B', 'C']) {\n      if (node1 != node2) {\n        for (let nodes_active of [true, false]) {\n          for (let cause of [true, false]) {\n            explanations.push(new Explanation(node1, node2, nodes_active, cause));\n          }\n        }\n      }\n    }\n  }\n  explanations = _.sortBy(explanations, [(e: Explanation) => e.stringify()]);\n  return explanations\n}\n\nexport class Explanation {\n\n  node1: string\n  node2: string\n  nodes_active: boolean\n  cause: boolean\n\n  constructor(node1, node2, nodes_active, cause) {\n    this.node1 = node1\n    this.node2 = node2\n    this.nodes_active = nodes_active\n    this.cause = cause\n  }\n\n  /**\n   * Checks whether the explanation is valid based on the node and edge modes.\n   * Returns true if node2 is a descendant of node1, either directly or indirectly.\n   * @param nodeA\n   * @param nodeB\n   * @param nodeC\n   * @param edgeAB\n   * @param edgeAC\n   * @param edgeBC\n   */\n  isValid(nodeA?: boolean, nodeB?: boolean, nodeC?: boolean, edgeAB?: Mode, edgeAC?: Mode, edgeBC?: Mode) {\n    nodeA = !!nodeA;\n    nodeB = !!nodeB;\n    nodeC = !!nodeC;\n    edgeAB = edgeAB === undefined ? Mode.None : edgeAB;\n    edgeAC = edgeAC === undefined ? Mode.None : edgeAC;\n    edgeBC = edgeBC === undefined ? Mode.None : edgeBC;\n\n    if (this.nodes_active && !(eval(`node${this.node1} && node${this.node2}`))) {\n      return false;\n    }\n    if (!this.nodes_active && (eval(`node${this.node1} || node${this.node2}`))) {\n      return false;\n    }\n\n    let directMode;\n    let indirectMode;\n    if ((this.node1 == 'A' && this.node2 == 'B') || (this.node1 == 'B' && this.node2 == 'A')) {\n      directMode = edgeAB;\n      if (edgeAC == Mode.Forward && edgeBC == Mode.Backward) {\n        indirectMode = Mode.Forward;\n      } else if (edgeBC == Mode.Forward && edgeAC == Mode.Backward) {\n        indirectMode = Mode.Backward;\n      } else {\n        indirectMode = Mode.None;\n      }\n    } else if ((this.node1 == 'A' && this.node2 == 'C') || (this.node1 == 'C' && this.node2 == 'A')) {\n      directMode = edgeAC;\n      indirectMode = edgeAB == edgeBC ? edgeAB : Mode.None;\n    } else {\n      directMode = edgeBC;\n      indirectMode = edgeAB == edgeAC ? edgeAB : Mode.None;\n    }\n\n    if (this.cause) {\n      if (directMode == (this.node1 < this.node2 ? Mode.Forward : Mode.Backward)) {\n        return true;\n      }\n      if (indirectMode == (this.node1 < this.node2 ? Mode.Forward : Mode.Backward)) {\n        return true;\n      }\n      return false;\n    } else {\n      if (directMode == (this.node1 < this.node2 ? Mode.Forward : Mode.Backward)) {\n        return false;\n      }\n      if (indirectMode == (this.node1 < this.node2 ? Mode.Forward : Mode.Backward)) {\n        return false;\n      }\n      return true;\n    }\n  }\n\n  stringify() {\n    if (this.nodes_active && this.cause) {\n      return `${this.node2} activated because ${this.node1} activated`;\n    }\n    if (this.nodes_active && !this.cause) {\n      return `${this.node2} activated, but not because ${this.node1} activated`;\n    }\n    if (!this.nodes_active && this.cause) {\n      return `${this.node2} would have activated if ${this.node1} had activated`;\n    }\n    return `${this.node2} would not have activated, even if ${this.node1} had activated`;\n  }\n}","import {getUrlParams, loadJSON} from \"./misc/utils\";\n\nexport interface Config {\n  dev_mode: boolean\n  host_url: string\n  flask_port: number\n  post_data_interval: number\n\n  completion_code: string\n  appx_duration: number\n  base_reward: number\n  reward_per_edge: number\n}\n\nexport let CONFIG: Config;\n\nexport async function loadConfig() {\n  CONFIG = await loadJSON('config.json') as Config;\n  CONFIG.dev_mode = getUrlParams()['devmode'] === true;\n}\n\nexport function getFlaskURL() {\n  return `http://${CONFIG.host_url}:${CONFIG.flask_port}`\n}\n\nexport function getPostURL() {\n  return `${getFlaskURL()}/save`\n}","import moment from \"moment\";\nimport {getPostURL} from \"../config\";\nconst stringify = require('json-stable-stringify');\nconst CryptoJS = require(\"crypto-js\");\nconst _ = require('lodash');\n\n\nexport const timeFormat = \"YYYY-MM-DD HH:mm:ss:SSSS (ZZ)\";\nexport const randomWords = [\n  'Ber 90', 'Cor 10,000', 'Dax 800', 'Fep 393', 'Gel 190', 'Hux 920', 'Jat 820',\n  'Kip 383', 'Liv 283', 'Mox 123', 'Nox 184', 'Por 78', 'Quex 10', 'Rix 2097',\n  'Swy 313', 'Tus 29', 'Vas 11', 'Wex 29', 'Yex 800', 'Zup 57'\n];\n\nexport function now() {\n  return moment().format(timeFormat);\n}\n\nexport function sleep(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function isNumeric(str: string) {\n  /**\n   * Checks if a string is a number.\n   * See https://stackoverflow.com/questions/175739/how-can-i-check-if-a-string-is-a-valid-number\n   */\n  if (typeof str != \"string\") return false // we only process strings!\n  return !isNaN(+str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\n    !isNaN(parseFloat(str)) // ...and ensure strings of whitespace fail\n}\n\nexport function parseString(str: string) {\n  /**\n   * Attempts to parse a string into a correct primitive.\n   * Currently supports booleans and numbers.\n   * If no type fits, returns the original string.\n   */\n  let s = str.toLowerCase();\n  if (s === 'true' || s === 'false') {\n    return s === 'true';\n  } else if (isNumeric(s)) {\n    return +s;\n  } else {\n    return s;\n  }\n}\n\n\n\nexport function mapToObject(collection: any[], f: (item: any) => [string, any]) {\n  /**\n   * Creates an object where each key-value is based on an item in the collection.\n   * Function f takes an item from collection and returns a length-2 list, where\n   * the first item represents the key in the return object and\n   * the second item represents the value for the corresponding key in the return object.\n   *\n   * Assuming no two items in the collection map to the same key, returns an object with the same\n   * number of items as the collection.\n   */\n  const obj: any = {};\n  for (let item of collection) {\n    let kv = f(item);\n    obj[kv[0]] = kv[1];\n  }\n  return obj;\n}\n\n\n\nexport function round(n: number, to: number, precision?: number) {\n\n  let rounded = Math.round(n / to) * to;\n  if (rounded === 0) {\n    return 0; // prevents -0\n  }\n\n  if (precision === undefined) {\n    precision = Number.isInteger(to) ? 0 : to.toString().split('.')[1].length;\n  }\n  rounded = parseFloat(Number.parseFloat(rounded.toString()).toFixed(precision));\n\n  return rounded;\n}\n\nexport function toUSD(n: number) {\n  n = round(n, 1e-2, 2);\n  let s = n.toString().split('.');\n  let precision = 2;\n  if (s.length > 1) {\n    precision = Math.max(2, s[1].length);\n  }\n  const usdFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: precision\n  });\n  return usdFormatter.format(n);\n}\n\nexport function getMidpoint(x1, y1, x2, y2) {\n  return [(x1 + x2)/2, (y1 + y2)/2];\n}\n\n\n/**\n * Web IO related\n */\nexport function getUrlParams() {\n  const params = new URL(window.location.href).searchParams;\n  const keys = Array.from(params.keys());\n  const values = _.map(keys, (k: string) => parseString(params.get(k)));\n  return _.zipObject(keys, values);\n}\n\n/**\n * Reads a JSON file in the 'public' directory\n * @param filename\n */\nexport function loadJSON(filename: string) {\n  filename = process.env.PUBLIC_URL + '/' + filename;\n  return new Promise(resolve => {\n    fetch(filename)\n      .then(response => response.json())\n      .then(body => { resolve(body); })\n      .catch(function (error: any) {\n        console.log(error);\n        return false;\n      })\n  });\n}\n\nexport const httpGet = async (url: string): Promise<any> => {\n  return new Promise(resolve => {\n    fetch(url, {\n      mode: 'cors', headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    },)\n      .then(response => response.json())\n      .then(body => {\n        resolve(body);\n      });\n  });\n};\n\nasync function attemptPost(filename: string, data: any) {\n  const stringForm = stringify(data);\n  const body = JSON.stringify({\n    \"filename\": filename,\n    \"postTime\": moment().format(timeFormat),\n    \"content\": stringForm\n  });\n  const checksum = CryptoJS.MD5(stringForm).toString();\n  return await fetch(getPostURL(), {\n    method: 'POST',\n    mode: 'cors',\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: body\n  }).then(response => response.text())\n    .then(function (response: any) {\n      const result = response === checksum;\n      if (result) {\n        return true;\n      } else {\n        return false;\n      }\n    })\n    .catch(function (error: any) {\n      console.log(error);\n      return false;\n    });\n}\n\n/**\n * Attempts to post data with filename to Config.postURL\n * Uses exponential backoff\n * TODO: implement something for when post fails\n * @param filename\n * @param data\n * @param wait: whether or not to wait for success response\n */\nexport async function httpPost(filename: string, data: any, wait: boolean) {\n  let retry = true;\n  let i = 1;\n  if (wait) {\n    while (retry) {\n      console.log(`Attempt with await ${i}: posting to ${filename}`);\n      retry = !await attemptPost(filename, data);\n      i += 1;\n      await sleep(Math.min(8000, Math.pow(2, i)*50)); // exponential backoff\n    }\n    console.log(\"Post success!\");\n  } else {\n    console.log(`Posting to ${filename}`);\n    attemptPost(filename, data);\n  }\n}","import React, {ComponentClass, ComponentProps} from 'react';\nimport {Data} from \"./Data\";\nimport stringify from 'json-stable-stringify';\nimport _ from 'lodash';\nimport {now} from \"./utils\";\nimport {CONFIG} from \"../config\";\n\ninterface Props {\n  data: Data\n  completedCallback: () => void\n  goBackCallback: () => void\n}\n\ninterface Subsequence {\n  sequence: ComponentClass<any>\n  props?: any\n  getProps?: () => any\n}\n\n/**\n * Sequence extends the standard Component to make transitioning from one Component to next easy.\n * Each Sequence can either be standalone, in which case it functions as a Component,\n * or it can house a subsequence of Sequences.\n *\n * If a Sequence is standalone, it complete() should be called in order for the parent Sequence to proceed.\n * If a Sequence contains subsequences, it will by default call complete() when it runs out of subsequences.\n * complete() simply calls goToNextSubsequence of its parent, but may be overridden for additional functionality.\n *\n * This is a useful abstraction because it allows the parent sequence to be agnostic to the behavior of the child\n * sequence.\n *\n * When defining subsequences, the subsequence props can either be provided at definition time, or at initialization\n * time by providing getProps(), which is called when the Sequence is ready to load.\n *\n * Note for future reference: `current_idx` isn't really used to update the current subsequence, but rather to just\n * hold the data.\n * `current_idx` is retrieved from `Data` when getSubsequence() is called, which defaults to 0 if it doesn't exist yet,\n * then is held until saveSequenceState() is called, which is whenever the Sequence changes.\n * This is preferable to just using `current_idx` to update because when a Sequence is initialized, `current_idx`\n * is always set to 0. This is usually fine, but if goToPrev is called at the start of one Sequence and the previous\n * Sequence contains subsequences, then the screen will result in showing the first of the subsequence.\n * TODO: Remove `current_idx` so that the only source of truth is held in Data. Rather than using `current_idx` as\n *  a temporary value, just update the variable in Data directly. Functionally, this shouldn't be any different,\n *  so this is somewhat low priority.\n */\nclass Sequence extends React.Component<ComponentProps<any>> {\n\n  /**\n   * The following fields may be implemented for use.\n   * onKeyDown(key: string) => void\n   *  If this function is defined, it will be called whenever a keyboard key is pressed.\n   *  To define this, use\n   *  `onKeyDown = (key: string) => { ... }`\n   */\n  current_subsequence?: any;\n  current_idx: number;\n  subsequence: Subsequence[];\n  boundHandleKeyDown: (event: any) => void;\n  onKeyDown?: (key: string) => void;\n\n  constructor(props: Props) {\n    super(props);\n    this.subsequence = [];\n    this.current_idx = 0;  // this is only used to save to this.props.data\n    this.boundHandleKeyDown = this.handleKeyDown.bind(this);\n    this.loadStateData = this.loadStateData.bind(this);\n    this.goToNext = this.goToNext.bind(this);\n    this.goToPrev = this.goToPrev.bind(this);\n  }\n\n  /**\n   * This function is called just before the sequence changes\n   * Override to implement a functionality.\n   */\n  onGoToNext() {}\n\n  /**\n   * sequence: a subclass of Sequence\n   * props: an object containing relevant properties\n   * getProps: a function that returns additional props for dynamic/lazy loading\n  */\n  addSubsequence(sequence: ComponentClass<any>, props?: any, getProps?: () => any) {\n    props = props === undefined ? {} : _.clone(props);\n    if (!('key' in props)) {\n      /* React doesn't always update when props change, but it does always update when a component with a different\n         key needs to be rendered. By assigning a random key to all subsequences, this guarantees that React\n         will always render the new screen. This is probably inefficient, but it produces more consistent behavior.\n         In case a particular behavior is desired, this only applies when key is not defined already.\n       */\n      props['key'] = Math.random();\n    }\n    this.subsequence.push({ sequence, props, getProps });\n  }\n\n  /**\n   * Dynamically creates the Sequence component.\n   * This means that props are populated and the constructor() called at call time\n   */\n  getSubsequence() {\n    this.current_idx = this.getCurrentSubsequenceIndex();\n    const subsequence = this.subsequence[this.current_idx];\n    let props = subsequence.props;\n    if (subsequence.getProps !== undefined) {\n      props = Object.assign(props, subsequence.getProps());\n    }\n    props['data'] = this.props.data;\n    props['completedCallback'] = this.goToNext;\n    props['goBackCallback'] = this.goToPrev;\n    this.current_subsequence = React.createElement(subsequence.sequence, props);\n  }\n\n  getParams() {\n    const params = {\n      class: this.constructor.name,\n      props: {...this.props}\n    }\n    delete params.props.data;\n    delete params.props.completedCallback;\n    return Object.freeze(params);\n  }\n\n  getSequenceKey() {\n    return stringify(this.getParams());\n  }\n\n  /**\n   Used to save current state of the Sequence so that it can be loaded back later.\n   **/\n  createStateData(): any {\n    const data = {state: _.clone(this.state)}\n    data['current_idx'] = this.current_idx;\n    return data;\n  }\n\n  /**\n   * Attempts to retrieve the current subsequence index from data if it exists.\n   * If it doesn't exist, returns 0.\n   * This is preferable to just\n   */\n  getCurrentSubsequenceIndex() {\n    const data = this.props.data.loadSequenceState(this);\n    if (data === null || data.current_idx < 0) {\n      return 0;\n    }\n    if (data.current_idx >= this.subsequence.length) {\n      return this.subsequence.length - 1;\n    }\n    return data.current_idx;\n  }\n\n  loadStateData() {\n    const data = this.props.data.loadSequenceState(this);\n    if (data !== null) {\n      if ('state' in data) {\n        this.setState(data.state);\n      }\n    }\n  }\n\n  goToPrev() {\n    this.current_idx = Math.max(-1, this.current_idx - 1);\n    this.props.data.saveSequenceState(this);\n\n    if (this.current_idx < 0) {\n      this.props.goBackCallback();\n    } else {\n      this.getSubsequence();\n      this.forceUpdate();\n    }\n    window.scrollTo(0, 0);  // scroll to top\n  }\n\n  goToNext() {\n    this.current_idx = Math.min(1 + this.current_idx, this.subsequence.length);\n    this.props.data.saveSequenceState(this);\n\n    if (this.current_idx == this.subsequence.length) {\n      this.onGoToNext()\n      this.props.completedCallback();\n    } else {\n      this.getSubsequence();\n      this.forceUpdate();\n    }\n    window.scrollTo(0, 0);  // scroll to top\n  }\n\n  handleKeyDown(event: any) {\n    let { key } = event;\n    if (this.onKeyDown !== undefined) {\n      this.onKeyDown(key);\n    }\n  }\n\n  componentDidMount() {\n    if (this.onKeyDown !== undefined) {\n      document.addEventListener('keydown', this.boundHandleKeyDown);\n    }\n    this.loadStateData();\n    this.props.data.sequenceTimestamps.push({timestamp: now(), sequence: this.getParams()});\n  }\n\n  componentWillUnmount() {\n    if (this.onKeyDown !== undefined) {\n      document.removeEventListener('keydown', this.boundHandleKeyDown);\n    }\n  }\n\n  render() {\n    // This is just to load the first subsequence.\n    if (this.current_subsequence === undefined && this.subsequence.length > 0) {\n      this.getSubsequence();\n    }\n    return (\n      <div>\n        {this.current_subsequence}\n      </div>\n    );\n  }\n}\n\nexport default Sequence;","import React, {ComponentProps} from \"react\";\nimport {Circle, Group, Text} from \"react-konva\";\n\ninterface Props {\n  x: number\n  y: number\n  radius: number\n  label: string\n  active?: boolean\n  enableOnClick?: boolean\n}\n\nexport default class Node extends React.Component<ComponentProps<any>> {\n\n  state: {\n    active: boolean\n  }\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { active: !!props.active };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    if (this.props.enableOnClick) {\n      this.setState({active: !this.state.active});\n    }\n  }\n\n  render() {\n    const fontSize = this.props.radius * .75;\n    return (\n      <Group>\n        <Circle\n          x={this.props.x}\n          y={this.props.y}\n          radius={.97 * this.props.radius}\n          stroke={'black'}\n          strokeWidth={.06 * this.props.radius}\n          fill={ this.state.active ? \"yellow\" : \"#E5E5E5\"}\n          onClick={this.onClick}\n        />\n        <Text\n          text={this.props.label}\n          x={this.props.x - this.props.radius/2}\n          y={this.props.y - this.props.radius/2}\n          width={this.props.radius}\n          height={this.props.radius}\n          fontSize={fontSize}\n          fontStyle={'bold'}\n          align={'center'}\n          verticalAlign={'middle'}\n          onClick={this.onClick}\n        />\n\n      </Group>\n\n    )\n  }\n}","import React, {ComponentProps} from \"react\";\nimport {Line, Group} from \"react-konva\";\n\nexport default class Xmark extends React.Component<ComponentProps<any>> {\n\n  props: {\n    x: number\n    y: number\n    size: number\n    color: string\n  }\n\n  render() {\n    return (\n      <Group>\n        <Line\n          points={[this.props.x - this.props.size,\n                   this.props.y - this.props.size,\n                   this.props.x + this.props.size,\n                   this.props.y + this.props.size]}\n          stroke={this.props.color}\n          strokeWidth={this.props.size / 2}\n        />\n        <Line\n          points={[this.props.x - this.props.size,\n                   this.props.y + this.props.size,\n                   this.props.x + this.props.size,\n                   this.props.y - this.props.size]}\n          stroke={this.props.color}\n          strokeWidth={this.props.size / 2}\n        />\n      </Group>\n\n    )\n  }\n}","import React, {ComponentProps} from \"react\";\nimport {Line, Group} from \"react-konva\";\n\nexport default class Checkmark extends React.Component<ComponentProps<any>> {\n\n  props: {\n    x: number\n    y: number\n    size: number\n    color: string\n  }\n\n  render() {\n    return (\n      <Group>\n        <Line\n          points={[this.props.x + this.props.size,\n            this.props.y - this.props.size,\n            this.props.x - this.props.size/4,\n            this.props.y + this.props.size,\n            this.props.x - this.props.size,\n            this.props.y\n          ]}\n          stroke={this.props.color}\n          strokeWidth={this.props.size / 2}\n        />\n      </Group>\n\n    )\n  }\n}","import React, {ComponentProps, createRef, RefObject} from \"react\";\nimport {Layer, Stage} from \"react-konva\";\nimport Node from \"./graph/Node\"\nimport Edge, {Mode} from \"./graph/Edge\";\nimport Xmark from \"./graph/Xmark\";\nimport {getMidpoint} from \"../misc/utils\";\nimport Checkmark from \"./graph/Checkmark\";\nconst _ = require('lodash');\n\ninterface Props {\n  width: number\n  radius: number\n  nodeA?: boolean\n  nodeB?: boolean\n  nodeC?: boolean\n\n  edgeAB?: Mode\n  edgeAC?: Mode\n  edgeBC?: Mode\n\n  edgeABActive?: boolean\n  edgeACActive?: boolean\n  edgeBCActive?: boolean\n\n  enableNodeOnClick?: boolean\n  enableEdgeOnClick?: boolean\n  disableEdgeShadow?: boolean\n}\n\nexport default class CausalGraphThree extends React.Component<ComponentProps<any>> {\n\n  refEdgeAB: RefObject<Edge>;\n  refEdgeAC: RefObject<Edge>;\n  refEdgeBC: RefObject<Edge>;\n\n  constructor(props: Props) {\n    super(props);\n    this.refEdgeAB = createRef();\n    this.refEdgeAC = createRef();\n    this.refEdgeBC = createRef();\n  }\n\n  getEdgeModes() {\n    return {\n      edgeAB: this.refEdgeAB.current!.state.mode,\n      edgeAC: this.refEdgeAC.current!.state.mode,\n      edgeBC: this.refEdgeBC.current!.state.mode\n    }\n  }\n\n  render() {\n    const length = this.props.width - 2*this.props.radius;\n    const divHeight =  length * Math.sqrt(3)/2 + 2*this.props.radius;\n    const nodeCenters = [\n      [this.props.width/2, this.props.radius],\n      [this.props.radius, divHeight - this.props.radius],\n      [this.props.width - this.props.radius, divHeight - this.props.radius]\n    ]\n    const nodeLabels = ['A', 'B', 'C'];\n    const nodeActive = [this.props.nodeA, this.props.nodeB, this.props.nodeC];\n    const edgeLength = (this.props.width - 4 * this.props.radius) / this.props.width;\n    const edgeWidth = .2 * this.props.radius;\n    const edgeABCenter = getMidpoint(nodeCenters[0][0], nodeCenters[0][1], nodeCenters[1][0], nodeCenters[1][1]);\n    const edgeACCenter = getMidpoint(nodeCenters[0][0], nodeCenters[0][1], nodeCenters[2][0], nodeCenters[2][1]);\n    const edgeBCCenter = getMidpoint(nodeCenters[1][0], nodeCenters[1][1], nodeCenters[2][0], nodeCenters[2][1]);\n\n    return (\n      <span className={'causal-graph-three'} style={{display: \"inline-block\"}}>\n      <Stage width={this.props.width} height={divHeight} >\n        <Layer>\n          <Edge\n            point1={nodeCenters[0]}\n            point2={nodeCenters[1]}\n            length={edgeLength}\n            width={edgeWidth}\n            mode={this.props.edgeAB}\n            enableOnClick={this.props.enableEdgeOnClick}\n            disableShadow={this.props.disableEdgeShadow}\n            ref={this.refEdgeAB}\n          />\n          <Edge\n            point1={nodeCenters[0]}\n            point2={nodeCenters[2]}\n            length={edgeLength}\n            width={edgeWidth}\n            mode={this.props.edgeAC}\n            enableOnClick={this.props.enableEdgeOnClick}\n            disableShadow={this.props.disableEdgeShadow}\n            ref={this.refEdgeAC}\n          />\n          <Edge\n            point1={nodeCenters[1]}\n            point2={nodeCenters[2]}\n            length={edgeLength}\n            width={edgeWidth}\n            mode={this.props.edgeBC}\n            enableOnClick={this.props.enableEdgeOnClick}\n            disableShadow={this.props.disableEdgeShadow}\n            ref={this.refEdgeBC}\n          />\n\n          {this.props.edgeABActive === true &&\n              <Checkmark x={edgeABCenter[0]} y={edgeABCenter[1]} size={35*edgeLength} color={'limegreen'}/>}\n          {this.props.edgeACActive === true &&\n              <Checkmark x={edgeACCenter[0]} y={edgeACCenter[1]} size={35*edgeLength} color={'limegreen'}/>}\n          {this.props.edgeBCActive === true &&\n              <Checkmark x={edgeBCCenter[0]} y={edgeBCCenter[1]} size={35*edgeLength} color={'limegreen'}/>}\n          {this.props.edgeABActive === false &&\n              <Xmark x={edgeABCenter[0]} y={edgeABCenter[1]} size={35*edgeLength} color={'red'}/>}\n          {this.props.edgeACActive === false &&\n              <Xmark x={edgeACCenter[0]} y={edgeACCenter[1]} size={35*edgeLength} color={'red'}/>}\n          {this.props.edgeBCActive === false &&\n              <Xmark x={edgeBCCenter[0]} y={edgeBCCenter[1]} size={35*edgeLength} color={'red'}/>}\n\n          {_.map([0, 1, 2], (i: number) =>\n            (<Node\n              x={nodeCenters[i][0]}\n              y={nodeCenters[i][1]}\n              radius={this.props.radius}\n              label={nodeLabels[i]}\n              active={nodeActive[i]}\n              enableOnClick={this.props.enableNodeOnClick}\n              key={`node${i}`}\n            />))}\n        </Layer>\n      </Stage>\n    </span>)\n  }\n}","import React, {ComponentProps} from \"react\";\nimport {Button} from \"primereact/button\";\n\nexport default class ButtonFooter extends React.Component<ComponentProps<any>> {\n  props: {\n    onNext?: () => void\n    onBack?: () => void\n  }\n\n  render() {\n    return <div className=\"flex justify-content-between flex-wrap\">\n      <div className=\"flex relative align-items-left justify-content-left\">\n        {this.props.onBack !== undefined &&\n            <Button label=\"Back\" onClick={this.props.onBack}/> }\n      </div>\n      <div className=\"flex relative align-items-right justify-content-right\">\n        {this.props.onNext !== undefined &&\n            <Button label=\"Next\" className=\"p-button-success\" onClick={this.props.onNext}/> }\n      </div>\n    </div>\n  }\n}","import React, {ComponentProps} from \"react\";\nimport './Image.css';\n\n\ninterface Props {\n  filepath: string,\n  width?: number,\n  height?: number,\n  caption?: string\n}\n\nclass Image extends React.Component<ComponentProps<any>> {\n\n  filepath: string;\n\n  constructor(props: Props) {\n    super(props);\n    this.filepath = process.env.PUBLIC_URL + props.filepath;\n  }\n\n  render() {\n    return (<span className={'image'}>\n      <img src={this.filepath} width={this.props.width} height={this.props.height} />\n      {this.props.caption !== undefined &&\n        <span className={'caption'}>\n          {this.props.caption}\n        </span>\n      }\n    </span>)\n  }\n}\n\nexport default Image;","import React, {ComponentProps} from \"react\";\nimport Image from \"./Image\";\nimport './ExplanationBubble.css';\nimport {Explanation} from \"../misc/Explanation\";\n\nexport default class ExplanationBubble extends React.Component<ComponentProps<any>> {\n  props: {\n    explanation: Explanation\n    size?: number\n    robotOnRight?: boolean\n  }\n\n  renderLeft() {\n    const size = this.props.size === undefined ? 1 : this.props.size;\n    return <div className=\"grid\">\n      <div className=\"col-2\" style={{textAlign: 'left', width: size * 90}}>\n        <div className=\"vertical-center\">\n          <Image filepath=\"img/robot.png\" width={`${size*60}px`}/>\n        </div>\n      </div>\n      <div className=\"col-9\" style={{textAlign: 'left'}}>\n          <span className=\"speech-bubble sb-left\" style={{fontSize: size * 15}}>\n            {this.props.explanation.stringify()}\n          </span>\n      </div>\n    </div>\n  }\n\n  renderRight() {\n    const size = this.props.size === undefined ? 1 : this.props.size;\n    return <div className=\"grid\">\n      <div className=\"col-9\" style={{textAlign: 'right'}}>\n          <span className=\"speech-bubble sb-right\" style={{fontSize: size * 15}}>\n            {this.props.explanation.stringify()}\n          </span>\n      </div>\n      <div className=\"col-2\" style={{textAlign: 'right', width: size * 90}}>\n        <div className=\"vertical-center\">\n          <Image filepath=\"img/robot.png\" width={`${size*60}px`}/>\n        </div>\n      </div>\n    </div>\n  }\n\n  render() {\n    return <div className=\"explanation-bubble\">\n      { this.props.robotOnRight ? this.renderRight() : this.renderLeft() }\n    </div>\n  }\n}","import React, {ComponentProps} from \"react\";\nimport {Observation} from \"../misc/serviceLayer\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Column} from \"primereact/column\";\nimport './HistoryBar.css';\n\nexport default class HistoryBar extends React.Component<ComponentProps<any>> {\n\n  props: {\n    showActivations: boolean\n    showExplanations: boolean\n    observations: Observation[]\n    companies: string[]\n  }\n\n  nodeTemplate(observation: Observation, node: string) {\n    return <span className='circle'\n                 style={{backgroundColor: observation.activations[node] ? 'yellow' : '#E5E5E5'}} />\n  }\n\n  companyTemplate(observation: Observation) {\n    return <span>\n      {this.props.companies[observation.obsIdx]}\n    </span>\n  }\n\n  render() {\n    return (\n      <div style={{justifyContent: \"space-between\"}}>\n          <DataTable value={this.props.observations} size=\"large\">\n            <Column header=\"\" align='center' body={(o: Observation) => 1 + o.obsIdx } />\n            <Column header=\"Company\" align='center'\n                    body ={(o: Observation) => this.props.companies[o.obsIdx] }\n                    style={{width: '130px'}} />\n\n            { this.props.showActivations\n              && ['A', 'B', 'C'].map((col: string) => {\n                return <Column header={col} align='center' body={(o: Observation) => this.nodeTemplate(o, col) } />\n              })\n            }\n\n            { this.props.showExplanations\n              && <Column header=\"Explanation\"\n              body={(o: Observation) => <span className='explanation'> {o.explanation.stringify()} </span> }\n              style={{width: '300px'}}/>\n            }\n          </DataTable>\n      </div>\n\n    )\n  }\n}","import React, {createRef, RefObject} from \"react\";\nimport Sequence from \"../misc/Sequence\";\nimport CausalGraphThree from \"../components/CausalGraphThree\";\nimport {Data} from \"../misc/Data\";\nimport {Observation} from \"../misc/serviceLayer\";\nimport {Mode} from \"../components/graph/Edge\";\nimport {Button} from \"primereact/button\";\nimport {now} from \"moment\";\nimport ButtonFooter from \"../components/ButtonFooter\";\nimport ExplanationBubble from \"../components/ExplanationBubble\";\nimport {Config} from \"../config\";\nimport HistoryBar from \"../components/HistoryBar\";\nimport {Toast} from \"primereact/toast\";\n\n\nconst _ = require('lodash');\n\ninterface Props {\n  data: Data\n  completedCallback: () => void\n  goBackCallback: () => void\n  setIndex: number\n  observation: Observation\n  edgeAB: Mode\n  edgeAC: Mode\n  edgeBC: Mode\n}\n\nexport default class SeqObservation extends Sequence {\n  props: Props;\n  refGraph: RefObject<CausalGraphThree>;\n  startTime: number;\n  refToast: RefObject<Toast>;\n  companies: string[]\n  state: {\n    showGraph: boolean\n  }\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      showGraph: false\n    };\n    this.companies = [\"Pear\", \"TimeY\", \"Macroloft\", \"Congo\", \"Smoogle\", \"Pricefriend\", \"Metal\", \"Smell\", \"Jackson & Jackson\", \"Testle\"];\n    this.refToast = createRef();\n    this.refGraph = createRef();\n  }\n\n  recordResponse(responseTime: number) {\n    const edgeModes = this.refGraph.current!.getEdgeModes();\n    this.props.data.trialResponses.push({\n      setIndex: this.props.setIndex,\n      obsIndex: this.props.observation.obsIdx,\n      edgeAB: edgeModes.edgeAB,\n      edgeAC: edgeModes.edgeAC,\n      edgeBC: edgeModes.edgeBC,\n      responseTime: responseTime\n    })\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    this.setState({showGraph: true}, () => {\n      this.startTime = now();\n    });\n  }\n\n  onNext() {\n    const edges = this.refGraph.current.getEdgeModes();\n    let loop = edges.edgeAB == Mode.Forward && edges.edgeBC == Mode.Forward && edges.edgeAC == Mode.Backward;\n    loop = loop || edges.edgeAB == Mode.Backward && edges.edgeBC == Mode.Backward && edges.edgeAC == Mode.Forward;\n    if (loop) {\n      this.refToast.current.show({severity: 'error',\n        summary: 'Cycle Detected',\n        detail: `The connections you have indicated for this device has a cycle, which is not valid.\n        Please adjust the connections so that the cycle is removed.`,\n        life: 10000\n      });\n    } else {\n      const responseTime = now() - this.startTime;\n      this.recordResponse(responseTime);\n      this.goToNext();\n    }\n  }\n  render() {\n    const showActivations = this.props.data.experimentData.conditions.showActivations;\n    const showExplanations = this.props.data.experimentData.conditions.showExplanations;\n    const deviceName = this.props.data.experimentData.trialSets[this.props.setIndex].graphName;\n    const obsHistory = this.props.data.experimentData.trialSets[this.props.setIndex].observations.slice(0, 1+this.props.observation.obsIdx);\n    return (\n      <div>\n        <Toast ref={this.refToast} />\n        <h1> Model <i>{deviceName}</i> </h1>\n        <div>\n          { this.state.showGraph\n            ? <div>\n                <div style={{display: 'inline-block'}}>\n                  <p>\n                    A <i>{deviceName}</i> model was sent to 10 different companies. Each company tested their device once.\n                  </p>\n                  <br/>\n                  <p>\n                    Please indicate your current best guess of how the model <i>{deviceName}</i> works by adding\n                    (or removing) arrows between the components.\n                  </p>\n                </div>\n                <br/>\n                <br/>\n\n                <div className='grid'>\n                  <div className='col-6' style={{padding: \"10px\"}}>\n                    <HistoryBar showActivations={showActivations}\n                                showExplanations={showExplanations}\n                                observations={obsHistory}\n                                companies={this.companies}/>\n                  </div>\n                  <div className='col-6' style={{paddingLeft: \"30px\"}}>\n                    <div>\n                      {this.props.data.experimentData.conditions.showExplanations\n                      && <div style={{minHeight: \"105px\"}}>\n                        <ExplanationBubble explanation={this.props.observation.explanation}/>\n                      </div>}\n\n                      <br/>\n                      <CausalGraphThree\n                        width={300}\n                        radius={40}\n                        nodeA={showActivations && this.props.observation.activations.A}\n                        nodeB={showActivations && this.props.observation.activations.B}\n                        nodeC={showActivations && this.props.observation.activations.C}\n                        edgeAB={this.props.edgeAB}\n                        edgeAC={this.props.edgeAC}\n                        edgeBC={this.props.edgeBC}\n                        enableEdgeOnClick={true}\n                        ref={this.refGraph} />\n                    </div>\n                    <br/>\n                    <ButtonFooter onNext={this.onNext.bind(this)}/>\n                  </div>\n                </div>\n              </div>\n            : <div className=\"vertical-center\">\n            </div>\n          }\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport Sequence from \"../misc/Sequence\";\nimport CausalGraphThree from \"../components/CausalGraphThree\";\nimport {Data} from \"../misc/Data\";\nimport {TrialSet} from \"../misc/serviceLayer\";\nimport {toUSD} from \"../misc/utils\";\nimport {CONFIG} from \"../config\";\nimport ButtonFooter from \"../components/ButtonFooter\";\nconst _ = require('lodash');\n\ninterface Props {\n  data: Data\n  completedCallback: () => void\n  trialSet: TrialSet\n  companies: string[]\n  isLastSet: boolean\n}\n\nexport default class SeqSetComplete extends Sequence {\n\n  props: Props;\n\n  getTrialResults(idxLow: number, idxHigh: number) {\n    const showActivations = this.props.data.experimentData.conditions.showActivations;\n    const showExplanations = this.props.data.experimentData.conditions.showExplanations;\n\n    const responses = _.filter(this.props.data.trialResponses, (r) => r.setIndex == this.props.trialSet.setIndex);\n    return <div className=\"grid\">\n      {_.map(_.zip(this.props.trialSet.observations, responses).slice(idxLow, idxHigh),\n        (obs_res) => {\n          const observation = obs_res[0];\n          const response = obs_res[1];\n          return <div className=\"col\" key={`day${idxLow + observation.obsIdx}`}>\n            <div style={{marginBottom: 8}}><h4> {this.props.companies[observation.obsIdx]}</h4></div>\n\n            <CausalGraphThree\n              width={100}\n              radius={18}\n              nodeA={showActivations && observation.activations.A}\n              nodeB={showActivations && observation.activations.B}\n              nodeC={showActivations && observation.activations.C}\n              edgeAB={response.edgeAB}\n              edgeAC={response.edgeAC}\n              edgeBC={response.edgeBC}\n            />\n            {showExplanations && <div>{observation.explanation.stringify()}</div>}\n          </div>\n        }\n      )}\n    </div>\n  }\n\n  render() {\n\n    const numSolvedAll = this.props.data.getNumEdgesSolved();\n    const numSolved = numSolvedAll[this.props.trialSet.setIndex];\n    const totalSolved = _.sum(numSolved);\n    const total = 3 * numSolved.length;\n    const cumTotalSolved = this.props.data.getTotalEdgesSolved();\n\n    return (\n      <div>\n        <h1><i>{this.props.trialSet.graphName}</i> Model Results</h1>\n\n        <p>\n          You have completed {1 + this.props.trialSet.setIndex} out of {this.props.data.experimentData.trialSets.length} sets.\n          You correctly identified the correct causal connections for this model {totalSolved} times\n          out of {total} possible across all 10 companies\n          for a total of {toUSD(totalSolved * CONFIG.reward_per_edge)}.\n          Your cumulative total is {toUSD(cumTotalSolved * CONFIG.reward_per_edge)}.\n          These were your responses to the devices you observed.\n        </p>\n        <br/>\n        {this.getTrialResults(0, 5)}\n        <br/>\n        {this.getTrialResults(5, 10)}\n        <br/>\n        <p>\n          This is how the <i>{this.props.trialSet.graphName}</i> model works:\n        </p>\n        <br/>\n        <CausalGraphThree\n          width = {200}\n          radius = {30}\n          edgeAB = {this.props.trialSet.edgeAB}\n          edgeAC = {this.props.trialSet.edgeAC}\n          edgeBC = {this.props.trialSet.edgeBC}\n        />\n        <br/><br/>\n        <ButtonFooter onNext={this.goToNext.bind(this)}/>\n      </div>\n    );\n  }\n}","import Sequence from \"../misc/Sequence\";\nimport {Data} from \"../misc/Data\";\nimport {TrialSet} from \"../misc/serviceLayer\";\nimport SeqObservation from \"./SeqObservation\";\nimport React from \"react\";\nimport {Mode} from \"../components/graph/Edge\";\nimport SeqSetComplete from \"./SeqSetComplete\";\n\n\ninterface Props {\n  data: Data\n  completedCallback: () => void\n  goBackCallback: () => void\n  trialSet: TrialSet\n}\n\nexport default class SeqCausalGraphInference extends Sequence {\n\n  constructor(props: Props) {\n    super(props);\n\n    for (let observation of props.trialSet.observations) {\n      this.addSubsequence(SeqObservation,\n        {\n          setIndex: props.trialSet.setIndex,\n          observation: observation,\n          key: `obs_${this.props.trialSet.setIndex}.${observation.obsIdx}`\n        },\n        this.getLastResponse.bind(this));\n    }\n    this.addSubsequence(SeqSetComplete, {\n      trialSet: this.props.trialSet,\n      isLastSet: this.props.trialSet.setIndex === this.props.data.experimentData.trialSets.length - 1,\n      companies: [\"Pear\", \"TimeY\", \"Macroloft\", \"Congo\", \"Smoogle\", \"Pricefriend\", \"Metal\", \"Smell\", \"Jackson & Jackson\", \"Testle\"]\n    });\n  }\n\n  onGoToNext() {\n    this.props.data.post(false);\n  }\n\n  /**\n   *  returns an object with {edgeAB: Mode, edgeAC: Mode, edgeBC: Mode}\n   */\n  getLastResponse() {\n    const responses = this.props.data.trialResponses;\n    if (responses.length === 0\n      || responses[responses.length-1].setIndex !== this.props.trialSet.setIndex) {\n      return {edgeAB: Mode.None, edgeAC: Mode.None, edgeBC: Mode.None}\n    } else {\n      const response = responses[responses.length-1];\n      return {\n        edgeAB: response.edgeAB,\n        edgeAC: response.edgeAC,\n        edgeBC: response.edgeBC\n      }\n    }\n  }\n}","import React from 'react';\nimport Sequence from \"../misc/Sequence\";\nimport {toUSD} from \"../misc/utils\";\nimport {CONFIG} from \"../config\";\n\n\nexport default class SeqEnd extends Sequence {\n\n  async componentDidMount() {\n    super.componentDidMount();\n    await this.props.data.post(true);\n  }\n\n  render() {\n    const bonus = CONFIG.reward_per_edge * this.props.data.getTotalEdgesSolved();\n\n    return (\n      <div>\n        <h1>The End</h1>\n        <p>\n          Thank you for completing the study!\n          <br/><br/>\n          Your completion code is <b>{CONFIG.completion_code}</b>.\n          <br/><br/>\n          You will be paid {toUSD(CONFIG.base_reward)} once you submit the code to Prolific.\n          Your bonus of {toUSD(bonus)} will be paid within a few days.\n          <br/><br/>\n          You may close the window.\n        </p>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport { Mode } from '../../components/graph/Edge';\nimport ButtonFooter from \"../../components/ButtonFooter\";\n\n\nexport default class SeqInstructionsIntro extends Sequence {\n\n\n\n  render() {\n    return (\n      <div>\n        <h1>Causal Devices</h1>\n\n        <p>\n          In this study, you will be taking the role of a scientist trying to figure out how\n          certain <b>causal devices</b> work.\n\n          Each device contains 3 <b>components</b>, indicated by circles with letters inside of them,\n          and <b>causal connections</b>, indicated by arrows.\n        </p>\n        <br/>\n        <CausalGraphThree\n          width={250}\n          radius={35}\n          nodeA={false}\n          nodeB={true}\n          nodeC={true}\n          edgeBC={Mode.Backward}\n        />\n        <br/>\n        <br/>\n        <p>\n          Components may be <b>active</b> (yellow) or <b>inactive</b> (gray).\n          Some of the components are connected, while others are not.\n          In this device, there is a causal connection from C to B, indicated by the arrow pointing from C to B.\n          This means that when C is active, it may cause B to activate.\n          There are no causal connections between A and B, or between A and C.\n        </p>\n        <br/>\n        <ButtonFooter onNext={this.goToNext}/>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport Sequence from \"../../misc/Sequence\";\nimport { Button } from 'primereact/button';\nimport {CONFIG} from \"../../config\";\n\n\nexport default class SeqConsentForm extends Sequence {\n\n  render() {\n    return (\n      <div>\n        <h1>Consent Form</h1>\n        <p>\n          Welcome! You are invited to participate in a research study in cognitive psychology.\n          You will be asked to perform various tasks on a computer which may include:\n          looking at images or videos, listening to sounds, reading scenarios, or playing games.\n          You may be asked a number of different questions about making judgments and intepreting people's actions.\n          All information collected will remain confidential.\n          <br/><br/>\n          <b>Requirements:</b> Please ensure that you can see the full width (horizontal length) of the program,\n          marked by the yellow background.\n          The program requires that the full width be visible, or it may malfunction.\n          You do not need to fit the full height (vertical length) of the program, and you may scroll vertically\n          if necessary.\n          If you are unable set your window size to fit the full width, please exit the study.\n          <br/><br/>\n          <b>Risks and benefits:</b> Risks involved in this study are the same as those normally\n          associated with using a computer (e.g. mild eye/arm strain).\n          If you have any pre-existing conditions that might make reading and completing\n          a computer-based survey strenuous for you, you should probably elect to not participate in this study.\n          If at any time during the study you feel unable to participate because you are experiencing strain,\n          you may end your participation without penalty.\n          We cannot and do guarantee or promise that you will receive any benefits from this study.\n          Your decision whether or not to participate in this study will not affect\n          your employment, medical care, and/or grades in school.\n          <br/><br/>\n          <b>Time involvement:</b> Your participation in this experiment will take\n          approximately {CONFIG.appx_duration} minutes.\n          <br/><br/>\n          <b>Payment:</b> If recruitment materials indicate payment (e.g., Prolific or other recruitment),\n          you will receive compensation as indicated.\n          <br/><br/>\n          <b>Subject's rights:</b> If you have read this notice and\n          have decided to participate in this project, please understand\n          your participation is voluntary and you have the right to\n          withdraw your consent or discontinue participation at any\n          time without penalty or loss of benefits to which you are\n          otherwise entitled. You have the right to refuse to answer\n          particular questions. Your individual privacy will be\n          maintained in all published and written data resulting from\n          the study.\n          <br/><br/>\n          <b>Contact information:</b> If you have any questions,\n          concerns or complaints about this research study, its\n          procedures, or risks and benefits, you should ask the\n          Protocol Director, (Professor Tobias Gerstenberg, Phone:\n          (650) 725-2431; Email: gerstenberg@stanford.edu).\n          <br/><br/>\n          <b>Independent contact:</b> If you are not satisfied with how this study is being conducted,\n          or if you have any concerns, complaints,\n          or general questions about the research or your rights as a participant, please contact the Stanford\n          Institutional Review Board (IRB) to speak to someone independent of the research team via email at\n          irb2-manager@lists.stanford.edu, or via phone at (650) 723-2480 or toll free at 1-866-680-2906.\n          You can also write to the Stanford IRB, Stanford University, 3000 El\n          Camino Real, Five Palo Alto Square, 4th Floor, Palo Alto, CA 94306.\n          <br/><br/>\n          You may want to print a copy of this consent form to keep.\n          <br/><br/>\n          By clicking the button below, you acknowledge that\n          you have read the above information, that you are 18 years\n          of age, or older and give your consent to participate in\n          our internet-based study and consent for us to analyze the\n          resulting data.\n          <br/><br/>\n          Do you agree with the terms of the experiment as explained\n          above?\n        </p>\n        <br/>\n        <Button label=\"I agree\" icon=\"pi pi-check\" className=\"p-button-success\" onClick={this.goToNext}/>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport {Mode} from \"../../components/graph/Edge\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\n\n\nexport default class SeqInstructionsCausalDevice extends Sequence {\n\n  render() {\n    const pRoot = 100 * this.props.data.experimentData.graphParams.pRoot;\n    const pEdge = 100 * this.props.data.experimentData.graphParams.pEdge;\n    const pNonRoot = 100 * this.props.data.experimentData.graphParams.pNonRoot;\n    return (\n      <div>\n        <h1>Activations</h1>\n\n        <p>\n          If a component does not have any incoming causal connections,\n          such as components B and C in the device below, they have\n          a <b>{pRoot}%</b> chance to activate.\n          <br/><br/>\n          Causal connections have a <b>{pEdge}%</b> chance of working.\n          This means that if B activates, there is a <b>{pEdge}%</b> chance that it will activate A.\n          Components with an incoming arrow (such as A) also have a <b>{pNonRoot}%</b> chance to activate on their\n          own. <b>Only active components can activate other components.\n          Components do not prevent other components from activating.</b>\n          <br/><br/>\n          For example, in this device, components A and B are active.\n          Because there is a causal arrow pointing from B to A,\n          it is likely that B caused A to activate, though it is possible that A activated on its own.\n          Since C is not active, even though there is a causal arrow pointing from C to A,\n          it is impossible for it to have activated A.\n          It is not possible for A to activate B or C, because the causal arrows point from B to A, and from C to A.\n        </p>\n        <br/>\n        <CausalGraphThree\n          width={250}\n          radius={35}\n          nodeA={true}\n          nodeB={true}\n          edgeAB={Mode.Backward}\n          edgeAC={Mode.Backward}\n        />\n        <br/>\n        <ButtonFooter onBack={this.goToPrev} onNext={this.goToNext}/>\n      </div>\n    );\n  }\n}","import React, {createRef, RefObject} from 'react';\nimport Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport {Mode} from \"../../components/graph/Edge\";\nimport {Data} from \"../../misc/Data\";\n\nimport { Toast } from 'primereact/toast';\nimport ButtonFooter from \"../../components/ButtonFooter\";\nimport _ from \"lodash\";\nimport {Observation} from \"../../misc/serviceLayer\";\nimport {RadioButton} from \"primereact/radiobutton\";\n\nexport default class SeqInstructionsTask extends Sequence {\n  state: {selected: number}\n  refToast: RefObject<Toast>;\n  companies: string[];\n\n  constructor(props: any) {\n    super(props);\n    this.refToast = createRef();\n    this.state = { selected: null };\n    this.companies = [\"Pear\", \"TimeY\", \"Macroloft\", \"Congo\", \"Smoogle\", \"Pricefriend\", \"Metal\", \"Smell\", \"Jackson & Jackson\", \"Testle\"];\n  }\n\n  onSubmit() {\n    if (this.state.selected === null) {\n      this.refToast.current!.show({severity: 'error',\n        summary: 'Incorrect',\n        detail: 'Please select a causal device.'});\n    } else {\n      this.goToNext();\n    }\n  }\n\n  render() {\n    const edges = [\n      {edgeAB: Mode.Forward, edgeAC: Mode.Backward},\n      {\n        edgeAB: this.props.data.experimentData.tutorial.edgeAB,\n        edgeAC: this.props.data.experimentData.tutorial.edgeAC,\n        edgeBC: this.props.data.experimentData.tutorial.edgeBC\n      },\n      {}\n    ]\n    return (\n      <div>\n        <Toast ref={this.refToast} />\n\n        <h1>Inferring the Connectivity</h1>\n        <p>\n            10 companies are testing their devices, each of which are <i>Cor 3000</i>'s. Each company receives 1 device, and tests it once.\n            Your task is to figure out how the <i>Cor 3000</i> works: how are the components connected to each other?\n          <br/><br/>\n          Below are observations from each company for the <i>Cor 3000</i>.\n          Components that activated are shown in yellow, and components that didn't activate are shown in gray.\n        </p>\n        <br/>\n        <div className=\"grid\">\n          {_.map(this.props.data.experimentData.tutorial.observations.slice(0, 5),\n            (obs: Observation) => <div className=\"col\">\n              <div style={{marginBottom: 8}}><h4>{this.companies[obs.obsIdx]}</h4></div>\n              <CausalGraphThree\n                width={100}\n                radius={18}\n                nodeA={obs.activations.A}\n                nodeB={obs.activations.B}\n                nodeC={obs.activations.C}\n              />\n            </div>)}\n        </div>\n        <br/>\n        <div className=\"grid\">\n          {_.map(this.props.data.experimentData.tutorial.observations.slice(5, 10),\n            (obs: Observation) => <div className=\"col\">\n              <div style={{marginBottom: 8}}><h4>{this.companies[obs.obsIdx]}</h4></div>\n              <CausalGraphThree\n                width={100}\n                radius={18}\n                nodeA={obs.activations.A}\n                nodeB={obs.activations.B}\n                nodeC={obs.activations.C}\n              />\n            </div>)}\n        </div>\n        <br/>\n        <p>\n          Based on the observations above, how do you think the <i>Cor 3000</i> works?\n        </p>\n        <br/>\n        <div className=\"grid\">\n        {_.map(edges, (e: any, idx: number) =>\n          <div className=\"col\">\n            <div>\n              <CausalGraphThree\n                width={200}\n                radius={30}\n                edgeAB={e.edgeAB}\n                edgeAC={e.edgeAC}\n                edgeBC={e.edgeBC}\n              />\n            </div>\n            <RadioButton\n              name=\"graph\"\n              inputId={`graph${idx}`}\n              value=''\n              onChange={(e) => this.setState({selected: idx})}\n              checked={this.state.selected == idx}\n            />\n          </div>\n        )}\n        </div>\n        <br/>\n        <ButtonFooter onBack={this.goToPrev} onNext={this.onSubmit.bind(this)}/>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport {Mode} from \"../../components/graph/Edge\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\nimport ExplanationBubble from \"../../components/ExplanationBubble\";\nimport {Explanation} from \"../../misc/Explanation\";\n\nexport default class SeqInstructionsExplanations extends Sequence {\n\n  render() {\n    return (\n      <div>\n        <h1>Instructions 4</h1>\n\n        <p>\n          Some companies have access to a robot that knows how each component activated.\n          The robot will give explanations of what happened.\n          Its explanation can refer to either <b>two active components</b> or <b>two inactive components</b>.\n          Explanations may refer to direct or indirect connections between components.\n          <br/><br/>\n          Everything that the robot says is guaranteed to be true, but the robot chooses its explanations at random.\n          This means that while the robot will never be misleading, it may also not be the most helpful at times.\n          <br/><br/>\n          In the example below, there is a causal link from A to B, and from B to C.\n          When the device was tested, A activated on its own, A activated B, and B activated C.\n          Here are some possible explanations that the robot might give based on what happened\n          and their interpretations:\n        </p>\n        <br/>\n        <div className=\"grid\">\n          <div className=\"col-4\">\n            <div className='vertical-center'>\n              <CausalGraphThree\n                width={250}\n                radius={35}\n                nodeA={true}\n                nodeB={true}\n                nodeC={true}\n                edgeAB={Mode.Forward}\n                edgeBC={Mode.Forward}\n                edgeABActive={true}\n                edgeBCActive={true}\n              />\n            </div>\n          </div>\n          <div className=\"col-8\" style={{paddingLeft: 50}}>\n            <ExplanationBubble\n              explanation={new Explanation('A', 'B', true, true)}\n              robotOnRight={false}/>\n\n            <hr style={{ backgroundColor: 'black', height: 3, marginTop: 2, marginBottom: 12}} />\n            <ExplanationBubble\n              explanation={new Explanation('A', 'C', true, true)}\n              robotOnRight={true}/>\n            <p>\n              Since A activated B and B activated C, A also indirectly activated C.\n            </p>\n\n            <hr style={{ backgroundColor: 'black', height: 3, marginTop: 2, marginBottom: 12}} />\n            <ExplanationBubble\n              explanation={new Explanation('C', 'A', true, false)}\n              robotOnRight={false}/>\n            <ExplanationBubble\n              explanation={new Explanation('B', 'A', true, false)}\n              robotOnRight={true}/>\n            <p>\n              Since there are no connections from C to A or from B to A, they cannot be the reasons why A activated.\n            </p>\n          </div>\n        </div>\n        <br/>\n        <ButtonFooter onBack={this.goToPrev} onNext={this.goToNext}/>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport {Mode} from \"../../components/graph/Edge\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\nimport ExplanationBubble from \"../../components/ExplanationBubble\";\nimport {Explanation} from \"../../misc/Explanation\";\n\nexport default class SeqInstructionsExplanationsDouble extends Sequence {\n\n  render() {\n    return (\n      <div>\n        <h1>Instructions 5</h1>\n\n        <p>\n          In this example, there is a causal link from A to C, and from B to C.\n          When the device was tested, A and B activated on their own. A activated C, and B also activated C.\n          Here are some possible explanations that the robot might give based on what happened\n          and their interpretations:\n        </p>\n        <br/>\n        <div className=\"grid\">\n          <div className=\"col-4\">\n            <div className='vertical-center'>\n              <CausalGraphThree\n                width={250}\n                radius={35}\n                nodeA={true}\n                nodeB={true}\n                nodeC={true}\n                edgeAC={Mode.Forward}\n                edgeBC={Mode.Forward}\n                edgeACActive={true}\n                edgeBCActive={true}\n              />\n            </div>\n          </div>\n          <div className=\"col-8\" style={{paddingLeft: 50}}>\n            <ExplanationBubble\n              explanation={new Explanation('A', 'C', true, true)}\n              robotOnRight={false}/>\n\n            <ExplanationBubble\n              explanation={new Explanation('B', 'C', true, true)}\n              robotOnRight={true}/>\n            <p>\n              Here, A caused C to activate, and B caused C to activate, so both statements are true.\n            </p>\n\n            <hr style={{ backgroundColor: 'black', height: 3, marginTop: 2, marginBottom: 12}} />\n            <ExplanationBubble\n              explanation={new Explanation('C', 'A', true, false)}\n              robotOnRight={false}/>\n            <ExplanationBubble\n              explanation={new Explanation('C', 'B', true, false)}\n              robotOnRight={true}/>\n            <p>\n              Since there are no connections from C to A or from C to B, C cannot be the reason that A or B activated.\n            </p>\n          </div>\n        </div>\n        <br/>\n        <ButtonFooter onBack={this.goToPrev} onNext={this.goToNext}/>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport {Mode} from \"../../components/graph/Edge\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\nimport ExplanationBubble from \"../../components/ExplanationBubble\";\nimport {Explanation} from \"../../misc/Explanation\";\n\nexport default class SeqInstructionsExplanationsInactive extends Sequence {\n\n  render() {\n    return (\n      <div>\n        <h1>Instructions 6</h1>\n\n        <p>\n          The robot can also give explanations about inactive components.\n          <br/><br/>\n          Recall that everything that the robot says is guaranteed to be true, but the robot chooses its explanations at random.\n          <br/><br/>\n          In the first example, there is a causal link from A to B, and a causal link from B to C.\n          Neither, A, B, nor C activated on their own. Here are some possible explanations the robot might give based on what happened and their interpretations\n        </p>\n        <br/>\n        <div className=\"grid\">\n          <div className=\"col-4\">\n            <div className='vertical-center'>\n              <CausalGraphThree\n                width={250}\n                radius={35}\n                nodeA={false}\n                nodeB={false}\n                nodeC={false}\n                edgeAB={Mode.Forward}\n                edgeBC={Mode.Forward}\n                edgeABActive={true}\n                edgeBCActive={true}\n              />\n            </div>\n          </div>\n          <div className=\"col-8\" style={{paddingLeft: 50}}>\n            <ExplanationBubble\n              explanation={new Explanation('A', 'B', false, true)}\n              robotOnRight={false}/>\n              <hr style={{ backgroundColor: 'black', height: 3, marginTop: 2, marginBottom: 12}} />\n            <ExplanationBubble\n              explanation={new Explanation('A', 'C', false, true)}\n              robotOnRight={true}/>\n            <p>\n              Since the connection from A to B and the connection from B to C were working, A would have activated B, and A would have activated C.\n            </p>\n\n            <hr style={{ backgroundColor: 'black', height: 3, marginTop: 2, marginBottom: 12}} />\n            <ExplanationBubble\n              explanation={new Explanation('C', 'A', false, false)}\n              robotOnRight={false}/>\n            <ExplanationBubble\n              explanation={new Explanation('B', 'A', false, false)}\n              robotOnRight={true}/>\n            <p>\n              Since there are no connections from C to A or from B to A, they wouldn't have activated A.\n            </p>\n          </div>\n        </div>\n        <br/>\n        <p>\n          In the second example, there is a causal link from B to A, and a causal link from C to A.\n          Neither, A, B, nor C activated on their own. Here are some possible explanations the robot might give based on what happened and their interpretations.\n        </p>\n        <br/>\n        <div className=\"grid\">\n          <div className=\"col-4\">\n            <div className='vertical-center'>\n              <CausalGraphThree\n                  width={250}\n                  radius={35}\n                  nodeA={false}\n                  nodeB={false}\n                  nodeC={false}\n                  edgeAB={Mode.Backward}\n                  edgeAC={Mode.Backward}\n                  edgeABActive={true}\n                  edgeACActive={true}\n              />\n            </div>\n          </div>\n          <div className=\"col-8\" style={{paddingLeft: 50}}>\n            <ExplanationBubble\n                explanation={new Explanation('B', 'A', false, true)}\n                robotOnRight={false}/>\n\n            <ExplanationBubble\n                explanation={new Explanation('C', 'A', false, true)}\n                robotOnRight={true}/>\n            <p>\n              There are working connections from B to A, and from C to A, so both explanations are valid.\n            </p>\n\n\n          </div>\n        </div>\n        <ButtonFooter onBack={this.goToPrev} onNext={this.goToNext}/>\n      </div>\n    );\n  }\n}","import React, {createRef, RefObject} from 'react';\nimport Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport {Mode} from \"../../components/graph/Edge\";\nimport {Data} from \"../../misc/Data\";\n\nimport { Toast } from 'primereact/toast';\nimport ButtonFooter from \"../../components/ButtonFooter\";\n\ninterface Props {\n  data: Data\n  completedCallback: () => void\n  goBackCallback: () => void\n}\n\nexport default class SeqInstructionsArrows extends Sequence {\n  props: Props;\n  refGraph: RefObject<CausalGraphThree>;\n  refToast: RefObject<Toast>;\n\n  constructor(props: Props) {\n    super(props);\n    this.refToast = createRef();\n    this.refGraph = createRef();\n  }\n\n  onSubmit = (key: string) => {\n    const edges = this.refGraph.current!.getEdgeModes();\n    if (edges.edgeAB === Mode.Backward && edges.edgeAC === Mode.Backward && edges.edgeBC === Mode.None) {\n      this.goToNext();\n    } else {\n      this.refToast.current!.show({severity: 'error',\n        summary: 'Incorrect',\n        detail: 'Please try again.'});\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Toast ref={this.refToast} />\n\n        <h1>Changing Connections</h1>\n\n        <p>\n          You can indicate your current best guess of how components are connected by clicking between them.\n          Clicking closer to a component will set the arrow pointing towards it.\n          If the arrow is already pointing towards it, this will remove the arrow.\n          <br/><br/>\n          Change the connections in the device below to indicate the following hypothesis:\n          B directly causes A, C directly causes A, and neither A nor B directly cause C.\n        </p>\n        <br/>\n        <CausalGraphThree\n          width={250}\n          radius={35}\n          nodeA={true}\n          nodeB={true}\n          nodeC={true}\n          edgeAB={Mode.Forward}\n          edgeBC={Mode.Forward}\n          enableEdgeOnClick={true}\n          ref={this.refGraph}\n        />\n        <br/>\n        <ButtonFooter onBack={this.goToPrev} onNext={this.onSubmit.bind(this)}/>\n      </div>\n    );\n  }\n}","import Sequence from \"../../misc/Sequence\";\nimport {Mode} from \"../../components/graph/Edge\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport React, {createRef, RefObject} from \"react\";\nimport {InputNumber} from \"primereact/inputnumber\";\nimport {Toast} from \"primereact/toast\";\nimport {mapToObject} from \"../../misc/utils\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\nconst _ = require('lodash');\n\nfunction createQuestions(pRoot: number, pNonRoot: number, pEdge: number) {\n  return  [\n    {\n      key: 'p_a',\n      question: 'What is the chance that A will activate?',\n      solution: 100 * pRoot\n    },\n    {\n      key: 'p_b_given_a',\n      question: 'If A activates, what is the chance that it will cause B to activate?',\n      solution: 100 * pEdge\n    },\n    {\n      key: 'p_b_given_not_a',\n      question: 'If A does not activate, what is the chance that B will activate on its own?',\n      solution: 100 * pNonRoot\n    },\n    {\n      key: 'p_c_given_b',\n      question: 'If B activates, what is the chance that C will activate?',\n      solution: 100 * pRoot\n    },\n    {\n      key: 'p_c_given_not_b',\n      question: 'If B does not activate, what is the chance that C will activate?',\n      solution: 100 * pRoot\n    }\n  ]\n}\n\nexport default class SeqComprehensionCheck1 extends Sequence {\n\n  refToast: RefObject<Toast>;\n  state: {[key: number]: null | number};\n  questions: any[];\n\n  constructor(props: any) {\n    super(props);\n    this.questions = createQuestions(this.props.data.experimentData.graphParams.pRoot,\n      this.props.data.experimentData.graphParams.pNonRoot,\n      this.props.data.experimentData.graphParams.pEdge)\n    this.state = mapToObject(this.questions, (q) => [q.key, null]);\n    this.refToast = createRef();\n  }\n\n  create_prob_question(qText: string, stateKey: string) {\n    return <div className=\"flex justify-content-around flex-wrap\"\n                key={stateKey}\n                style={{paddingTop: 4, paddingLeft: 8}}>\n      <div className=\"flex relative align-items-center justify-content-left\"\n           style={{width: 320, textAlign: \"left\"}}>\n        {qText}\n      </div>\n\n      <div className=\"flex relative align-items-center justify-content-left\" style={{paddingLeft: 8}}>\n        <InputNumber value={this.state[stateKey]}\n                     min={0}\n                     max={100}\n                     size={4}\n                     suffix='%'\n                     style={{height: 28}}\n                     onChange={(e) => {\n                       const state: any = {};\n                       state[stateKey] = e.value;\n                       this.setState(state)}\n                     }/>\n      </div>\n    </div>\n  }\n\n  onSubmit() {\n    _.forEach(this.state, (value: any, key: string) =>\n      this.props.data.recordQuestionResponse(this, key, value));\n    const solutions = mapToObject(this.questions, (q) => [q.key, q.solution]);\n    if (!_.isEqual(this.state, solutions)) {\n      this.refToast.current!.show({severity: 'error',\n        summary: 'Incorrect',\n        detail: `One or more of your responses are incorrect. \n        Please check the instructions again and correct your responses.`,\n        life: 5000\n      });\n    } else {\n      this.goToNext();\n    }\n  }\n\n  onKeyDown = function (key: string) {\n    if (key == 'Enter') {\n      this.onSubmit();\n    }\n  }\n\n  render(): JSX.Element {\n    return <div>\n      <Toast ref={this.refToast} />\n      <h1>Comprehension Check</h1>\n      <p>\n        Please answer the following questions about the model below:\n      </p>\n      <br/>\n      <div className=\"grid\">\n        <div className=\"col-4\">\n          <div className=\"vertical-center \">\n            <CausalGraphThree\n              width={230}\n              radius={35}\n              edgeAB={Mode.Forward}\n            />\n          </div>\n        </div>\n        <div className=\"col-8\">\n          {_.map(this.questions,\n            (q: any, idx: number) => this.create_prob_question(`${idx+1}. ${q.question}`, q.key))}\n        </div>\n      </div>\n      <br/>\n\n      <ButtonFooter onBack={this.goToPrev.bind(this)} onNext={this.onSubmit.bind(this)}/>\n    </div>\n  }\n}","import Sequence from \"../../misc/Sequence\";\nimport {Mode} from \"../../components/graph/Edge\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport {Explanation, getAllExplanations} from \"../../misc/Explanation\";\nimport React from \"react\";\nimport ExplanationBubble from \"../../components/ExplanationBubble\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\nconst _ = require('lodash');\n\n\nexport default class SeqWhatHappened extends Sequence {\n\n  props: {\n    deviceName: string,\n    day: number\n    description: string\n    edgeAB?: Mode\n    edgeAC?: Mode\n    edgeBC?: Mode\n    edgeABActive?: boolean\n    edgeACActive?: boolean\n    edgeBCActive?: boolean\n    nodeA?: boolean\n    nodeB?: boolean\n    nodeC?: boolean\n  }\n\n  render(): JSX.Element {\n    const explanations =_.filter(getAllExplanations(),\n      (e: Explanation) => e.isValid(this.props.nodeA,\n                                    this.props.nodeB,\n                                    this.props.nodeC,\n                                    this.props.edgeABActive ? this.props.edgeAB : Mode.None,\n                                    this.props.edgeACActive ? this.props.edgeAC : Mode.None,\n                                    this.props.edgeBCActive ? this.props.edgeBC : Mode.None));\n\n    return <div>\n      <h1>\n        Example: Device {this.props.deviceName}, Day {this.props.day}\n      </h1>\n      <br/>\n      <div className=\"grid\">\n        <div className=\"col-4\">\n          <h3>Actual device</h3>\n          <br/>\n          <CausalGraphThree\n            width={220}\n            radius={32}\n            edgeAB={this.props.edgeAB}\n            edgeAC={this.props.edgeAC}\n            edgeBC={this.props.edgeBC}\n          />\n        </div>\n        <div className=\"col-4\">\n          <h3>What happened on Day {this.props.day}</h3>\n          <br/>\n          <CausalGraphThree\n            width={220}\n            radius={32}\n            nodeA={this.props.nodeA}\n            nodeB={this.props.nodeB}\n            nodeC={this.props.nodeC}\n            edgeAB={this.props.edgeAB}\n            edgeAC={this.props.edgeAC}\n            edgeBC={this.props.edgeBC}\n            edgeABActive={this.props.edgeABActive}\n            edgeACActive={this.props.edgeACActive}\n            edgeBCActive={this.props.edgeBCActive}\n          />\n        </div>\n        <div className=\"col-4\">\n          <h3>What you see on Day {this.props.day}</h3>\n          <br/>\n          <CausalGraphThree\n            width={220}\n            radius={32}\n            nodeA={this.props.nodeA}\n            nodeB={this.props.nodeB}\n            nodeC={this.props.nodeC}/>\n        </div>\n      </div>\n      <br/>\n\n      <p>\n        {this.props.description}\n      </p>\n\n      <br/>\n      <p>\n        Here are all the possible explanations that the robot may give\n        for what happened on Day {this.props.day} (you would only receive one of these):\n      </p>\n      <br/>\n      <div className='grid'>\n        {\n          _.map(explanations, (e: Explanation, idx: number) => {\n            return <div className='col-6' key={`exp${idx}`} style={{paddingLeft: '10px', paddingRight: '10px'}}>\n              <ExplanationBubble explanation={e} robotOnRight={false}/>\n            </div>\n          })\n        }\n      </div>\n\n      <br/>\n      <ButtonFooter onBack={this.goToPrev} onNext={this.goToNext}/>\n    </div>\n  }\n}","import React, {ComponentProps} from \"react\";\nimport {RadioButton} from \"primereact/radiobutton\";\nimport {Checkbox, CheckboxChangeParams} from \"primereact/checkbox\";\nconst _ = require('lodash');\n\n/**\n * A component for managing select-from questions.\n */\n\nexport default class CompQuestion extends React.Component<ComponentProps<any>> {\n\n    props: {\n        question: string\n        options: string[]\n        color: string\n        selected?: null | string | string[]\n        onChange: (value: string | string[]) => void\n        questionWidth: number\n        multiSelect?: boolean\n    }\n\n    options: { name: string, key: string }[];\n\n    constructor(props: any) {\n        super(props);\n        this.options = _.map(props.options, (o: string) => ({name: o, key: o}));\n        this.onCheckboxChange = this.onCheckboxChange.bind(this);\n    }\n\n    onCheckboxChange(e: CheckboxChangeParams) {\n        let selected = [...this.props.selected as string[]];\n        //\n        if (e.checked) {\n            selected.push(e.value.key);\n        }\n        else {\n            for (let i = 0; i < selected.length; i++) {\n                const selectedCategory = selected[i];\n\n                if (selectedCategory === e.value.key) {\n                    selected.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this.props.onChange(selected);\n    }\n\n    render() {\n        let selected;\n        if (this.props.selected === undefined || this.props.selected === null) {\n            selected = this.props.multiSelect ? [] : \"\";\n        } else {\n            selected = this.props.selected;\n        }\n\n        return (\n            <div className=\"grid\" style={{textAlign: \"center\"}}>\n                <div className=\"col-fixed\"\n                     style={{width: this.props.questionWidth, paddingTop: \"0.25rem\"}}>\n                    {this.props.question}\n                </div>\n                <div className=\"col\">\n                    <div className=\"grid\">\n                        <div className = \"col-2\">\n                        </div>\n                        <div className = \"col-2\">\n                        </div>\n                        {_.map(this.options, (option: any, idx: number) => (\n                            <div className=\"col-2\" style={{padding: \"0.25rem\", backgroundColor: this.props.color}} key={`${this.props.question}_option${idx}`}>\n                                {this.props.multiSelect\n                                    ? <Checkbox\n                                        inputId={`${this.props.question}_option${idx}`}\n                                        value={option}\n                                        onChange={this.onCheckboxChange}\n                                        checked={selected.includes(option.key)} />\n                                    : <RadioButton\n                                        inputId={`${this.props.question}_option${idx}`}\n                                        name=\"option\"\n                                        value={option}\n                                        onChange={(e) => this.props.onChange(e.value.key)}\n                                        checked={selected === option.key} />\n                                }\n                                <label htmlFor={`${this.props.question}_option${idx}`} style={{paddingLeft: 4}}>{option.name}</label>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport {Explanation} from \"../../misc/Explanation\";\nimport React, {createRef, RefObject} from \"react\";\nimport ExplanationBubble from \"../../components/ExplanationBubble\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\nimport {Toast} from \"primereact/toast\";\nimport {mapToObject} from \"../../misc/utils\";\nimport {Data} from \"../../misc/Data\";\nimport CompQuestion from \"../../components/survey/CompQuestion\";\nconst _ = require('lodash');\n\n\n\nexport default class SeqCompCheckExplanations extends Sequence {\n\n    props: {\n        data: Data\n        explanation: Explanation  // Explanation to be given\n        devices: string[]  // Names of Devices\n        graphTrees: {[key: string]: null | boolean}[]  //  6 graphs to be given\n        messages: string[]  // Messages given during feedback\n        solutions: boolean[] // solutions to the quiz\n        type: string  // (Active, Active Not, Inactive, Inactive Not)\n    }\n\n\n    refToast: RefObject<Toast>;\n    counter: number\n    colorMap: {[key: string]: null | string}\n    messageList: {[key: string]: null | string}\n    state: {[key: string]: null | string}\n\n    constructor(props: any) {\n        super(props);\n        this.counter = 0;\n        this.colorMap = mapToObject(props.devices, (d:string)=> [d, 'transparent'])\n        this.messageList = mapToObject(props.devices, (d:string)=> [d, ''])\n        this.state = mapToObject(props.devices, (d: string) => [d, null]);\n        this.refToast = createRef();\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    giveFeedback() {\n        const solutions = mapToObject(_.zip(this.props.devices, this.props.solutions),\n            (a) => [a[0], a[1] ? 'Yes' : 'No']);\n        for (let index in this.props.devices) {\n            if (!_.isEqual(this.state[this.props.devices[index]], solutions[this.props.devices[index]])) {\n                this.colorMap[this.props.devices[index]] = 'pink';\n                this.messageList[this.props.devices[index]] = 'Incorrect. ' + this.props.messages[index]\n            } else {\n                this.colorMap[this.props.devices[index]] = 'lightgreen';\n                this.messageList[this.props.devices[index]] = 'Correct! ' + this.props.messages[index]\n            }\n            this.forceUpdate();\n        }\n    }\n\n    onSubmit() {\n        _.forEach(this.state, (value: any, key: string) =>\n            this.props.data.recordQuestionResponse(this, key, value));\n        const solutions = mapToObject(_.zip(this.props.devices, this.props.solutions),\n            (a) => [a[0], a[1] ? 'Yes' : 'No']);\n        if (this.counter === 0) {\n            if (!_.isEqual(this.state, solutions)) {\n                this.counter = 1;\n                this.refToast.current!.show({\n                    severity: 'error',\n                    summary: 'Incorrect',\n                    detail: `One or more of your responses are incorrect.\n                     Please check the instructions again and correct your responses.`,\n                    life: 5000\n                });\n            } else {\n                this.giveFeedback();\n                this.counter = 2;\n            }\n        } else if (this.counter === 1){\n            this.giveFeedback();\n            this.counter = 2;\n        } else if (!_.isEqual(this.state, solutions)){\n            this.refToast.current!.show({\n                severity: 'error',\n                summary: 'Incorrect',\n                detail: `One or more of your responses are incorrect.\n                     Please correct your response before proceeding.`,\n                life: 5000\n            });\n            this.giveFeedback();\n        }\n        else{\n            this.goToNext();\n        }\n    }\n\n\n    render(): JSX.Element {\n        return <div>\n            <Toast ref={this.refToast} />\n            <h1>\n                Comprehension Check\n            </h1>\n            <br/>\n            <p>\n                The Robot gives the following explanation about a device. For each device, select whether the device is\n                consistent with the explanation or not.\n            </p>\n            <br/>\n            <ExplanationBubble\n                explanation={this.props.explanation}\n                robotOnRight={true}/>\n            <br/>\n            <div className=\"grid\">\n                {_.map(this.props.devices, (d: string, idx: number) => {\n                    let num = idx+1\n                    let graphTree = this.props.graphTrees[idx];\n                    let device = 'Device ' + num + ' ' + this.props.type\n                    return <div className=\"col-4\">\n                        <h3>Device {1+idx}</h3>\n                        <br/>\n                        <CausalGraphThree\n                            width={220}\n                            radius={32}\n                            nodeA={graphTree[\"nodeA\"]}\n                            nodeB={graphTree[\"nodeB\"]}\n                            nodeC={graphTree[\"nodeC\"]}\n                            edgeAB={graphTree[\"edgeAB\"]}\n                            edgeBC={graphTree[\"edgeBC\"]}\n                            edgeAC = {graphTree[\"edgeAC\"]}\n                            edgeABActive={graphTree[\"edgeABActive\"]}\n                            edgeBCActive={graphTree[\"edgeBCActive\"]}\n                            edgeACActive = {graphTree[\"edgeACActive\"]}\n                        />\n                        <CompQuestion\n                            question={``}\n                            color = {this.colorMap[device]}\n                            options={['Yes', 'No']}\n                            selected={this.state[device]}\n                            onChange={(v) => {\n                                const state = {};\n                                state[device] = v;\n                                this.setState(state);\n                                if(this.counter === 2){\n                                    setTimeout(() => { this.giveFeedback(); }, 10);\n                                }\n                            }}\n                            questionWidth={350}/>\n                        <p style={{paddingLeft: \"25px\", paddingRight: \"25px\"}}>{this.messageList[device]}</p>\n                    </div>\n                })}\n            </div>\n\n            <br/>\n            <div style={{textAlign: \"right\"}}>\n                <ButtonFooter onBack={this.goToPrev.bind(this)} onNext={this.onSubmit.bind(this)}/>\n            </div>\n        </div>\n    }\n}","import React from 'react';\nimport Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport {Mode} from \"../../components/graph/Edge\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\n\n\nexport default class SeqInstructionsNoCycles extends Sequence {\n\n  render() {\n    return (\n      <div>\n        <h1>Invalid Models</h1>\n\n        <p>\n          No model will ever have a cycle, such as the two models shown below.\n          <br/>\n          <br/>\n          <b>These two models are invalid and will never occur, so make sure never to guess these.</b>\n        </p>\n        <br/>\n        <span style={{paddingRight: '50px'}}>\n          <CausalGraphThree\n            width={250}\n            radius={35}\n            edgeAB={Mode.Forward}\n            edgeBC={Mode.Forward}\n            edgeAC={Mode.Backward}\n          />\n        </span>\n        <span style={{paddingLeft: '50px'}}>\n          <CausalGraphThree\n            width={250}\n            radius={35}\n            edgeAB={Mode.Backward}\n            edgeBC={Mode.Backward}\n            edgeAC={Mode.Forward}\n          />\n        </span>\n        <br/>\n        <ButtonFooter onBack={this.goToPrev} onNext={this.goToNext}/>\n      </div>\n    );\n  }\n}","import Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\nimport { Mode } from \"../../components/graph/Edge\";\n\nexport default class SeqSampleActivation1 extends Sequence {\n  render() {\n    return (\n      <div>\n        <h1>Device Example</h1>\n\n        <p>\n          Take the device shown below.\n          Let's consider how might it activate.\n        </p>\n        <br/>\n        <CausalGraphThree\n          width={250}\n          radius={35}\n          edgeAB={Mode.Backward}\n          edgeAC={Mode.Backward}\n        />\n        <br/>\n        <ButtonFooter onBack={this.goToPrev} onNext={this.goToNext}/>\n      </div>\n    );\n  }\n}","import Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\nimport { Mode } from \"../../components/graph/Edge\";\n\nexport default class SeqSampleActivation2 extends Sequence {\n\n  render() {\n    const pRoot = 100 * this.props.data.experimentData.graphParams.pRoot;\n    const pEdge = 100 * this.props.data.experimentData.graphParams.pEdge;\n    const pNonRoot = 100 * this.props.data.experimentData.graphParams.pNonRoot;\n\n    return (\n      <div>\n        <h1>Device Example</h1>\n\n        <p>\n          First, let's look at the components without any incoming connections, in this case, components B and C.\n          These components have a {pRoot}% chance to activate.\n          This time, B activated but C did not.\n        </p>\n        <br/>\n        <CausalGraphThree\n          width={250}\n          radius={35}\n          nodeB={true}\n          edgeAB={Mode.Backward}\n          edgeAC={Mode.Backward}\n        />\n        <br/>\n        <ButtonFooter onBack={this.goToPrev} onNext={this.goToNext}/>\n      </div>\n    );\n  }\n}","import Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\nimport { Mode } from \"../../components/graph/Edge\";\n\nexport default class SeqSampleActivation3 extends Sequence {\n\n  render() {\n    const pRoot = 100 * this.props.data.experimentData.graphParams.pRoot;\n    const pEdge = 100 * this.props.data.experimentData.graphParams.pEdge;\n    const pNonRoot = 100 * this.props.data.experimentData.graphParams.pNonRoot;\n\n    return (\n      <div>\n        <h1>Device Example</h1>\n\n        <p>\n          Next, we consider their connections.\n          Each connection has a {pEdge}% chance of working.\n          We consider both connections from B to A and from C to A, even though C is not active.\n          <br/>\n          <br/>\n          This time, the connection from C to A worked, but the connection from B to A did not.\n          We show this with <span style={{color: 'limegreen'}}>✔</span> from C to A,\n          and <span style={{color: 'red'}}>✘</span> from B to A.\n          In the experiment later, this won't be shown.\n          <br/>\n          <br/>\n          This means that although B activated, it didn't activate A, since the connection did not work.\n          This also means that had C been active, A would have activated since the connection from C to A did work.\n        </p>\n        <br/>\n        <CausalGraphThree\n          width={250}\n          radius={35}\n          nodeB={true}\n          edgeAB={Mode.Backward}\n          edgeAC={Mode.Backward}\n          edgeABActive={false}\n          edgeACActive={true}\n        />\n        <br/>\n        <ButtonFooter onBack={this.goToPrev} onNext={this.goToNext}/>\n      </div>\n    );\n  }\n}","import Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\nimport { Mode } from \"../../components/graph/Edge\";\n\nexport default class SeqSampleActivation4 extends Sequence {\n\n  render() {\n    const pRoot = 100 * this.props.data.experimentData.graphParams.pRoot;\n    const pEdge = 100 * this.props.data.experimentData.graphParams.pEdge;\n    const pNonRoot = 100 * this.props.data.experimentData.graphParams.pNonRoot;\n\n    return (\n      <div>\n        <h1>Device Example</h1>\n\n        <p>\n          Although A was not activated by B or C in this case, it still had\n          a {pNonRoot}% chance to activate on its own, and this is what happened here.\n          <br/>\n          <br/>\n          A activated on its own, because neither B nor C caused it to activate.\n        </p>\n        <br/>\n        <CausalGraphThree\n          width={250}\n          radius={35}\n          nodeA={true}\n          nodeB={true}\n          edgeAB={Mode.Backward}\n          edgeAC={Mode.Backward}\n          edgeABActive={false}\n          edgeACActive={true}\n        />\n        <br/>\n        <ButtonFooter onBack={this.goToPrev} onNext={this.goToNext}/>\n      </div>\n    );\n  }\n}","import Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\nimport { Mode } from \"../../components/graph/Edge\";\n\nexport default class SeqSampleActivation5 extends Sequence {\n\n  render() {\n    return (\n      <div>\n        <h1>Device Example</h1>\n\n        <p>\n          During the experiment, you will only see which components activated (but not which connections were working).\n          So here is what you would see in the experiment for the example we went through.\n          <br/>\n        </p>\n        <br/>\n        <CausalGraphThree\n          width={250}\n          radius={35}\n          nodeA={true}\n          nodeB={true}\n        />\n        <br/>\n        <ButtonFooter onBack={this.goToPrev} onNext={this.goToNext}/>\n      </div>\n    );\n  }\n}","import Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\nimport { Mode } from \"../../components/graph/Edge\";\n\nexport default class SeqSampleActivation6 extends Sequence {\n\n  render() {\n    const pRoot = 100 * this.props.data.experimentData.graphParams.pRoot;\n    const pEdge = 100 * this.props.data.experimentData.graphParams.pEdge;\n    const pNonRoot = 100 * this.props.data.experimentData.graphParams.pNonRoot;\n\n    return (\n      <div>\n        <h1>Device Example</h1>\n\n        <p>\n            Note that the components in a device sometimes activate, and sometimes don't.\n          Similarly, the connections in a device sometimes work, and sometimes don't.\n            Connections have a 90% chance of working. Three examples of activation patterns\n            for the same device are shown below.\n          <br/>\n        </p>\n        <br/>\n        <div className=\"grid\">\n          <div className=\"col-4\">\n            <h3>Example 1</h3>\n            <br/>\n            <CausalGraphThree\n              width={250}\n              radius={35}\n              edgeAB={Mode.Backward}\n              edgeAC={Mode.Backward}\n              edgeABActive={true}\n              edgeACActive={false}\n              nodeA={false}\n              nodeB={false}\n              nodeC={true}\n            />\n          </div>\n          <div className=\"col-4\">\n            <h3>Example 2</h3>\n            <br/>\n            <CausalGraphThree\n              width={250}\n              radius={35}\n              edgeAB={Mode.Backward}\n              edgeAC={Mode.Backward}\n              edgeABActive={false}\n              edgeACActive={false}\n              nodeA={true}\n              nodeB={false}\n              nodeC={true}\n            />\n          </div>\n          <div className=\"col-4\">\n            <h3>Example 3</h3>\n            <br/>\n            <CausalGraphThree\n              width={250}\n              radius={35}\n              edgeAB={Mode.Backward}\n              edgeAC={Mode.Backward}\n              edgeABActive={true}\n              edgeACActive={true}\n              nodeA={true}\n              nodeB={true}\n              nodeC={true}\n            />\n          </div>\n        </div>\n\n        <br/>\n        <ButtonFooter onBack={this.goToPrev} onNext={this.goToNext}/>\n      </div>\n    );\n  }\n}","import Sequence from \"../../misc/Sequence\";\nimport SeqSampleActivation1 from \"./SeqSampleActivation1\";\nimport SeqSampleActivation2 from \"./SeqSampleActivation2\";\nimport SeqSampleActivation3 from \"./SeqSampleActivation3\";\nimport SeqSampleActivation4 from \"./SeqSampleActivation4\";\nimport SeqSampleActivation5 from \"./SeqSampleActivation5\";\nimport SeqSampleActivation6 from \"./SeqSampleActivation6\";\n\nexport default class SeqSampleActivation extends Sequence {\n  constructor(props: any) {\n    super(props);\n    this.addSubsequence(SeqSampleActivation1);\n    this.addSubsequence(SeqSampleActivation2);\n    this.addSubsequence(SeqSampleActivation3);\n    this.addSubsequence(SeqSampleActivation4);\n    this.addSubsequence(SeqSampleActivation5);\n    this.addSubsequence(SeqSampleActivation6);\n  }\n}","import React, {ComponentProps} from \"react\";\nimport {RadioButton} from \"primereact/radiobutton\";\nimport {Checkbox, CheckboxChangeParams} from \"primereact/checkbox\";\nconst _ = require('lodash');\n\n/**\n * A component for managing select-from questions.\n */\n\nexport default class SelectQuestion extends React.Component<ComponentProps<any>> {\n\n  props: {\n    question: string\n    options: string[]\n    selected?: null | string | string[]\n    onChange: (value: string | string[]) => void\n    questionWidth: number\n    multiSelect?: boolean\n  }\n\n  options: { name: string, key: string }[];\n\n  constructor(props: any) {\n    super(props);\n    this.options = _.map(props.options, (o: string) => ({name: o, key: o}));\n    this.onCheckboxChange = this.onCheckboxChange.bind(this);\n  }\n\n  onCheckboxChange(e: CheckboxChangeParams) {\n    let selected = [...this.props.selected as string[]];\n    //\n    if (e.checked) {\n      selected.push(e.value.key);\n    }\n    else {\n      for (let i = 0; i < selected.length; i++) {\n        const selectedCategory = selected[i];\n\n        if (selectedCategory === e.value.key) {\n          selected.splice(i, 1);\n          break;\n        }\n      }\n    }\n    this.props.onChange(selected);\n  }\n\n  render() {\n    let selected;\n    if (this.props.selected === undefined || this.props.selected === null) {\n      selected = this.props.multiSelect ? [] : \"\";\n    } else {\n      selected = this.props.selected;\n    }\n\n    return (\n      <div className=\"grid\" style={{textAlign: \"left\"}}>\n        <div className=\"col-fixed\"\n             style={{width: this.props.questionWidth, paddingTop: \"0.25rem\"}}>\n          {this.props.question}\n        </div>\n        <div className=\"col\">\n          <div className=\"grid\">\n            {_.map(this.options, (option: any, idx: number) => (\n              <div className=\"col-6\" style={{padding: \"0.25rem\"}} key={`${this.props.question}_option${idx}`}>\n                {this.props.multiSelect\n                  ? <Checkbox\n                    inputId={`${this.props.question}_option${idx}`}\n                    value={option}\n                    onChange={this.onCheckboxChange}\n                    checked={selected.includes(option.key)} />\n                  : <RadioButton\n                    inputId={`${this.props.question}_option${idx}`}\n                    name=\"option\"\n                    value={option}\n                    onChange={(e) => this.props.onChange(e.value.key)}\n                    checked={selected === option.key} />\n                }\n                <label htmlFor={`${this.props.question}_option${idx}`} style={{paddingLeft: 4}}>{option.name}</label>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n","import Sequence from \"../../misc/Sequence\";\nimport {Mode} from \"../../components/graph/Edge\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport {Explanation, getAllExplanations} from \"../../misc/Explanation\";\nimport React, {createRef, RefObject} from \"react\";\nimport ExplanationBubble from \"../../components/ExplanationBubble\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\nimport {Toast} from \"primereact/toast\";\nimport {mapToObject} from \"../../misc/utils\";\nimport {Data} from \"../../misc/Data\";\nimport SelectQuestion from \"../../components/survey/SelectQuestion\";\nconst _ = require('lodash');\n\n\nexport default class SeqCompCheckExplanations extends Sequence {\n\n    props: {\n        data: Data\n        nodeA?: boolean\n        nodeB?: boolean\n        nodeC?: boolean\n        edgeAB?: Mode\n        edgeAC?: Mode\n        edgeBC?: Mode\n        edgeABActive?: boolean\n        edgeACActive?: boolean\n        edgeBCActive?: boolean\n        explanations: string[]\n        solutions: boolean[]\n    }\n\n    refToast: RefObject<Toast>;\n    state: {[key: string]: null | string}\n\n    constructor(props: any) {\n        super(props);\n        this.state = mapToObject(props.explanations, (e: string) => [e, null]);\n        this.refToast = createRef();\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onSubmit() {\n        _.forEach(this.state, (value: any, key: string) =>\n            this.props.data.recordQuestionResponse(this, key, value));\n        const solutions = mapToObject(_.zip(this.props.explanations, this.props.solutions),\n            (a) => [a[0], a[1] ? 'True': 'False']);\n        if (!_.isEqual(this.state, solutions)) {\n            this.refToast.current!.show({severity: 'error',\n                summary: 'Incorrect',\n                detail: `One or more of your responses are incorrect.\n        Please check the instructions again and correct your responses.`,\n                life: 5000\n            });\n        } else {\n            this.goToNext();\n        }\n    }\n\n    render(): JSX.Element {\n        return <div>\n            <Toast ref={this.refToast} />\n            <h1>\n                Comprehension Check\n            </h1>\n            <br/>\n            <div className=\"grid\">\n                <div className=\"col-4\">\n                    <h3>Actual device</h3>\n                    <br/>\n                    <CausalGraphThree\n                        width={220}\n                        radius={32}\n                        edgeAB={this.props.edgeAB}\n                        edgeAC={this.props.edgeAC}\n                        edgeBC={this.props.edgeBC}\n                    />\n                </div>\n                <div className=\"col-4\">\n                    <h3>What happened</h3>\n                    <br/>\n                    <CausalGraphThree\n                        width={220}\n                        radius={32}\n                        nodeA={this.props.nodeA}\n                        nodeB={this.props.nodeB}\n                        nodeC={this.props.nodeC}\n                        edgeAB={this.props.edgeAB}\n                        edgeAC={this.props.edgeAC}\n                        edgeBC={this.props.edgeBC}\n                        edgeABActive={this.props.edgeABActive}\n                        edgeACActive={this.props.edgeACActive}\n                        edgeBCActive={this.props.edgeBCActive}\n                    />\n                </div>\n                <div className=\"col-4\">\n                    <h3>What you see</h3>\n                    <br/>\n                    <CausalGraphThree\n                        width={220}\n                        radius={32}\n                        nodeA={this.props.nodeA}\n                        nodeB={this.props.nodeB}\n                        nodeC={this.props.nodeC}/>\n                </div>\n            </div>\n\n            <br/>\n            <p>\n                Select whether each statement is true or false.\n            </p>\n            <br/>\n            {_.map(this.props.explanations, (e, idx: number) => {\n                let question = e;\n                return <div style={{paddingTop: 0}} key={question}>\n                    <SelectQuestion\n                        question={`${1+idx}. ${question}`}\n                        options={['True', 'False']}\n                        selected={this.state[question]}\n                        onChange={(v) => {\n                            const state = {};\n                            state[question] = v;\n                            this.setState(state);\n                        }}\n                        questionWidth={750}/>\n                </div>\n            })}\n\n            <br/>\n            <div style={{textAlign: \"right\"}}>\n                <ButtonFooter onBack={this.goToPrev.bind(this)} onNext={this.onSubmit.bind(this)}/>\n            </div>\n        </div>\n    }\n}","import Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\nimport { Mode } from \"../../components/graph/Edge\";\n\nexport default class SeqCompanyIntroduction extends Sequence {\n\n    render() {\n        const pRoot = 100 * this.props.data.experimentData.graphParams.pRoot;\n        const pEdge = 100 * this.props.data.experimentData.graphParams.pEdge;\n        const pNonRoot = 100 * this.props.data.experimentData.graphParams.pNonRoot;\n\n        return (\n            <div>\n                <h1>Models and Companies</h1>\n\n                <p>\n                    During the experiment, you'll be shown the results of different <b>companies</b> testing\n                    different <b>models</b> of devices.\n                    <br/>\n                    <br/>\n\n                    Every device model has a name. Devices of the same model have the same causal structure.\n                    Here are three examples of device models.\n                    <br/>\n                </p>\n                <br/>\n                <div className=\"grid\">\n                    <div className=\"col-4\">\n                        <h3><i>Ber 3000</i></h3>\n                        <br/>\n                        <CausalGraphThree\n                            width={250}\n                            radius={35}\n                            edgeAC={Mode.Forward}\n                            nodeA={false}\n                            nodeB={false}\n                            nodeC={false}\n                        />\n                    </div>\n                    <div className=\"col-4\">\n                        <h3><i>Dax 8200</i></h3>\n                        <br/>\n                        <CausalGraphThree\n                            width={250}\n                            radius={35}\n                            edgeAB={Mode.Backward}\n                            edgeBC={Mode.Backward}\n                            nodeA={false}\n                            nodeB={false}\n                            nodeC={false}\n                        />\n                    </div>\n                    <div className=\"col-4\">\n                        <h3><i>Fep 100</i></h3>\n                        <br/>\n                        <CausalGraphThree\n                            width={250}\n                            radius={35}\n                            edgeAB={Mode.Backward}\n                            edgeAC={Mode.Backward}\n                            nodeA={false}\n                            nodeB={false}\n                            nodeC={false}\n                        />\n                    </div>\n                </div>\n\n                <br/>\n                <ButtonFooter onBack={this.goToPrev} onNext={this.goToNext}/>\n            </div>\n        );\n    }\n}","import React, {createRef, RefObject} from 'react';\nimport Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport {Mode} from \"../../components/graph/Edge\";\nimport {Data} from \"../../misc/Data\";\n\nimport { Toast } from 'primereact/toast';\nimport ButtonFooter from \"../../components/ButtonFooter\";\nimport _ from \"lodash\";\nimport {Observation} from \"../../misc/serviceLayer\";\nimport {RadioButton} from \"primereact/radiobutton\";\n\nexport default class SeqCompanyIntroduction2 extends Sequence {\n    state: {selected: number}\n    refToast: RefObject<Toast>;\n    companies: string[];\n\n    constructor(props: any) {\n        super(props);\n        this.refToast = createRef();\n        this.state = { selected: null };\n        this.companies = [\"Pear\", \"TimeY\", \"Macroloft\", \"Congo\", \"Smoogle\", \"Pricefriend\", \"Metal\", \"Smell\", \"Jackson & Jackson\", \"Testle\"];\n    }\n\n    onSubmit() {\n            this.goToNext();\n    }\n\n    render() {\n        const edges = [\n            {edgeAB: Mode.Forward, edgeAC: Mode.Backward},\n            {\n                edgeAB: this.props.data.experimentData.tutorial.edgeAB,\n                edgeAC: this.props.data.experimentData.tutorial.edgeAC,\n                edgeBC: this.props.data.experimentData.tutorial.edgeBC\n            },\n            {}\n        ]\n        return (\n            <div>\n                <Toast ref={this.refToast} />\n\n                <h1>Models and Companies</h1>\n                <p>\n                    During each trial of the experiment, these <b>companies</b> will be testing the same <b>model</b>  of device.\n                    <br/>\n                    <br/>\n                </p>\n                <br/>\n                <div className=\"grid\">\n                    {_.map(this.props.data.experimentData.tutorial.observations.slice(0, 5),\n                        (obs: Observation) => <div className=\"col\">\n                            <div style={{marginBottom: 8}}><h4>{this.companies[obs.obsIdx]}</h4></div>\n                        </div>)}\n                </div>\n                <br/>\n                <div className=\"grid\">\n                    {_.map(this.props.data.experimentData.tutorial.observations.slice(5, 10),\n                        (obs: Observation) => <div className=\"col\">\n                            <div style={{marginBottom: 8}}><h4>{this.companies[obs.obsIdx]}</h4></div>\n                        </div>)}\n                </div>\n                <br/>\n                <p>\n                    Each company  will be testing a different device, but every device will be of the same model.\n                    Since every model has the same causal structure, it's possible to learn how the model works\n                    by analyzing results from many different companies.\n                    <br/>\n                    <br/>\n                </p>\n                <br/>\n                <br/>\n                <ButtonFooter onBack={this.goToPrev} onNext={this.onSubmit.bind(this)}/>\n            </div>\n        );\n    }\n}","import React, {createRef, RefObject} from 'react';\nimport Sequence from \"../../misc/Sequence\";\nimport CausalGraphThree from \"../../components/CausalGraphThree\";\nimport {Mode} from \"../../components/graph/Edge\";\nimport {Data} from \"../../misc/Data\";\n\nimport { Toast } from 'primereact/toast';\nimport ButtonFooter from \"../../components/ButtonFooter\";\nimport _ from \"lodash\";\nimport {Observation} from \"../../misc/serviceLayer\";\nimport {RadioButton} from \"primereact/radiobutton\";\n\nexport default class SeqCompanyIntroduction3 extends Sequence {\n  state: {selected: number}\n  refToast: RefObject<Toast>;\n  companies: string[];\n\n  constructor(props: any) {\n    super(props);\n    this.refToast = createRef();\n    this.state = { selected: null };\n    this.companies = [\"Pear\", \"TimeY\", \"Macroloft\", \"Congo\", \"Smoogle\", \"Pricefriend\", \"Metal\", \"Smell\", \"Jackson & Jackson\", \"Testle\"];\n  }\n\n  onSubmit() {\n      this.goToNext();\n  }\n\n  render() {\n    const edges = [\n      {edgeAB: Mode.Forward, edgeAC: Mode.Backward},\n      {\n        edgeAB: this.props.data.experimentData.tutorial.edgeAB,\n        edgeAC: this.props.data.experimentData.tutorial.edgeAC,\n        edgeBC: this.props.data.experimentData.tutorial.edgeBC\n      },\n      {}\n    ]\n    return (\n      <div>\n        <Toast ref={this.refToast} />\n\n        <h1>Models and Companies</h1>\n        <p>\n            In the example below, each company tests their own <i>Dax 8200</i>, and they get the following results.\n            Components that activated are shown in yellow, and components that didn't activate are shown in gray.\n          <br/><br/>\n        </p>\n        <br/>\n        <div className=\"grid\">\n          <div className=\"col\">\n              <div style={{marginBottom: 8}}><h4>{this.companies[0]}</h4></div>\n              <CausalGraphThree\n                width={100}\n                radius={18}\n                nodeA={true}\n                nodeB={true}\n                nodeC={false}\n              />\n            </div>\n            <div className=\"col\">\n                <div style={{marginBottom: 8}}><h4>{this.companies[1]}</h4></div>\n                <CausalGraphThree\n                    width={100}\n                    radius={18}\n                    nodeA={true}\n                    nodeB={false}\n                    nodeC={false}\n                />\n            </div>\n            <div className=\"col\">\n                <div style={{marginBottom: 8}}><h4>{this.companies[2]}</h4></div>\n                <CausalGraphThree\n                    width={100}\n                    radius={18}\n                    nodeA={false}\n                    nodeB={false}\n                    nodeC={false}\n                />\n            </div>\n            <div className=\"col\">\n                <div style={{marginBottom: 8}}><h4>{this.companies[3]}</h4></div>\n                <CausalGraphThree\n                    width={100}\n                    radius={18}\n                    nodeA={true}\n                    nodeB={true}\n                    nodeC={true}\n                />\n            </div>\n            <div className=\"col\">\n                <div style={{marginBottom: 8}}><h4>{this.companies[4]}</h4></div>\n                <CausalGraphThree\n                    width={100}\n                    radius={18}\n                    nodeA={false}\n                    nodeB={false}\n                    nodeC={false}\n                />\n            </div>\n        </div>\n        <br/>\n        <div className=\"grid\">\n            <div className=\"col\">\n                <div style={{marginBottom: 8}}><h4>{this.companies[5]}</h4></div>\n                <CausalGraphThree\n                    width={100}\n                    radius={18}\n                    nodeA={true}\n                    nodeB={true}\n                    nodeC={false}\n                />\n            </div>\n            <div className=\"col\">\n                <div style={{marginBottom: 8}}><h4>{this.companies[6]}</h4></div>\n                <CausalGraphThree\n                    width={100}\n                    radius={18}\n                    nodeA={true}\n                    nodeB={true}\n                    nodeC={true}\n                />\n            </div>\n            <div className=\"col\">\n                <div style={{marginBottom: 8}}><h4>{this.companies[7]}</h4></div>\n                <CausalGraphThree\n                    width={100}\n                    radius={18}\n                    nodeA={false}\n                    nodeB={true}\n                    nodeC={true}\n                />\n            </div>\n            <div className=\"col\">\n                <div style={{marginBottom: 8}}><h4>{this.companies[8]}</h4></div>\n                <CausalGraphThree\n                    width={100}\n                    radius={18}\n                    nodeA={true}\n                    nodeB={true}\n                    nodeC={true}\n                />\n            </div>\n            <div className=\"col\">\n                <div style={{marginBottom: 8}}><h4>{this.companies[9]}</h4></div>\n                <CausalGraphThree\n                    width={100}\n                    radius={18}\n                    nodeA={true}\n                    nodeB={false}\n                    nodeC={false}\n                />\n            </div>\n        </div>\n        <br/>\n        <p>\n          From these results, we could infer that the <i>Dax 8200</i> might work like this:\n            <br/>\n            <br/>\n        </p>\n          <div className=\"grid\">\n              <div className=\"col-4\">\n              </div>\n              <div className=\"col-4\">\n                  <br/>\n                  <CausalGraphThree\n                      width={250}\n                      radius={35}\n                      edgeAB={Mode.Backward}\n                      edgeBC={Mode.Backward}\n                      nodeA={false}\n                      nodeB={false}\n                      nodeC={false}\n                  />\n              </div>\n              <div className=\"col-4\">\n              </div>\n          </div>\n        <br/>\n        <br/>\n        <ButtonFooter onBack={this.goToPrev} onNext={this.onSubmit.bind(this)}/>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport Sequence from \"../../misc/Sequence\";\nimport SeqInstructionsIntro from \"./SeqInstructionsIntro\";\nimport SeqConsentForm from \"./SeqConsentForm\";\nimport SeqInstructionsCausalDevice from \"./SeqInstructionsCausalDevice\";\nimport SeqInstructionsTask from \"./SeqInstructionsTask\";\nimport SeqInstructionsExplanations from \"./SeqInstructionsExplanations\";\nimport SeqInstructionsExplanationsDouble from \"./SeqInstructionsExplanationsDouble\";\nimport SeqInstructionsExplanationsInactive from \"./SeqInstructionsExplanationsInactive\";\nimport SeqInstructionsArrows from \"./SeqInstructionsArrows\";\nimport SeqComprehensionCheck1 from \"./SeqComprehensionCheck1\";\nimport SeqWhatHappened from \"./SeqWhatHappened\";\nimport {Mode} from \"../../components/graph/Edge\";\nimport SeqCompCheckExplanations from \"./SeqCompCheckExplanationsNew\";\nimport {Explanation} from \"../../misc/Explanation\";\nimport SeqInstructionsNoCycles from \"./SeqInstructionsNoCycles\";\nimport SeqSampleActivation from \"../sample_activation/SeqSampleActivation\";\nimport SeqVocabQuiz from \"./VocabQuiz\";\nimport SeqCompanyIntroduction from \"./SeqCompanyIntroduction\";\nimport SeqCompanyIntroduction2 from \"./SeqCompanyIntroduction2\";\nimport SeqCompanyIntroduction3 from \"./SeqCompanyIntroduction3\";\n\nexport default class SeqIntroduction extends Sequence {\n\n  constructor(props: any) {\n    super(props);\n\n    this.addSubsequence(SeqConsentForm);\n    this.addSubsequence(SeqInstructionsIntro);\n    this.addSubsequence(SeqInstructionsCausalDevice);\n    this.addSubsequence(SeqSampleActivation);\n    this.addVocabQuiz();\n    this.addSubsequence(SeqCompanyIntroduction);\n    this.addSubsequence(SeqCompanyIntroduction2);\n    this.addSubsequence(SeqCompanyIntroduction3);\n    this.addSubsequence(SeqInstructionsTask);\n    this.addSubsequence(SeqComprehensionCheck1);\n    this.addSubsequence(SeqInstructionsExplanations);\n    this.addSubsequence(SeqInstructionsExplanationsDouble);\n    this.addCompCheckExplanationSequenceActive();\n    this.addSubsequence(SeqInstructionsExplanationsInactive);\n    this.addCompCheckExplanationSequenceInactive();\n    //this.addSubsequence(SeqWhatNotHappened1);\n    //this.addSubsequence(SeqWhatNotHappened2);\n    //this.addSubsequence(SeqWhatNotHappened3);\n    //this.addSubsequence(SeqWhatNotHappened4);\n    this.addSubsequence(SeqInstructionsArrows);\n    this.addSubsequence(SeqInstructionsNoCycles);\n  }\n\n  addVocabQuiz(){\n    this.addSubsequence(SeqVocabQuiz, {\n      explanations: [\n          \"There is a connection from B to A.\",\n          \"There is a connection from A to B.\",\n          \"A activated.\",\n          \"The connection from A to C worked.\",\n          \"The connection from B to C didn't work.\"\n      ],\n      solutions: [true, false, true, false, true],\n      nodeA: true,\n      nodeB: true,\n      nodeC: false,\n      edgeAB: Mode.Backward,\n      edgeAC: Mode.Forward,\n      edgeBC: Mode.Forward,\n      edgeABActive: true,\n      edgeACActive: false,\n      edgeBCActive: false\n    });\n  }\n\n\n  addCompCheckExplanationSequenceActive() {\n    this.addSubsequence(SeqCompCheckExplanations, {\n      explanation: new Explanation('B', 'C', true, true),\n      type: \"Active\",\n      devices: [\n        'Device 1 Active',\n        'Device 2 Active',\n        'Device 3 Active',\n        'Device 4 Active',\n        'Device 5 Active',\n        'Device 6 Active'\n      ],\n      solutions: [true, false, true, false, false, true],\n      messages: [\n        \"There is a working connection from B to C, and B and C activated. So C activated because B activated.\",\n        \"There are no connections between B and C, so B did not cause C to activate.\",\n        \"There is a working connection from B to C, and B and C activated. So C activated because B activated.\",\n        \"B did not activate, so it could not have been the cause of C activating.\",\n        \"The connection from B to C didn't work, and C didn't activate.\",\n        \" B caused A to activate, and A caused C to activate, so B caused C to activate.\"\n      ],\n      graphTrees: [\n        {nodeA: false, nodeB: true, nodeC: true, edgeAB: null, edgeBC: Mode.Forward, edgeAC: null,\n          edgeABActive: null, edgeBCActive: true, edgeACActive: null},\n        {nodeA: false, nodeB: true, nodeC: true, edgeAB: null, edgeBC: null, edgeAC: null,\n          edgeABActive: null, edgeBCActive: null, edgeACActive: null},\n        {nodeA: true, nodeB: true, nodeC: true, edgeAB: null, edgeBC: Mode.Forward, edgeAC: Mode.Forward,\n          edgeABActive: null, edgeBCActive: true, edgeACActive: true},\n        {nodeA: true, nodeB: false, nodeC: true, edgeAB: null, edgeBC: null, edgeAC: Mode.Forward,\n          edgeABActive: null, edgeBCActive: null, edgeACActive: true},\n        {nodeA: true, nodeB: true, nodeC: false, edgeAB: null, edgeBC: Mode.Forward, edgeAC: null,\n          edgeABActive: null, edgeBCActive: false, edgeACActive: null},\n        {nodeA: true, nodeB: true, nodeC: true, edgeAB: Mode.Backward, edgeBC: null, edgeAC: Mode.Forward,\n          edgeABActive: true, edgeBCActive: null, edgeACActive: true}\n      ]\n    });\n    this.addSubsequence(SeqCompCheckExplanations, {\n      explanation: new Explanation('A', 'B', true, false),\n      type: \"Active Not\",\n      devices: [\n        'Device 1 Active Not',\n        'Device 2 Active Not',\n        'Device 3 Active Not',\n        'Device 4 Active Not',\n        'Device 5 Active Not',\n        'Device 6 Active Not'\n      ],\n      solutions: [true, true, false, false, false, true],\n      messages: [\n        \"Although B and A both activated, there are no connections between B and A. This means A was not the cause of B activating.\",\n        \"There are no connections between any of the nodes, so A could not have been the cause of B activating.\",\n        \"A caused C to activate, and C caused B to activate, so A caused B to activate. This means B activated because A activated.\",\n        \"There is a working connection from A to B, and A activated, so B activated because A activated.\",\n        \"There is a working connection from A to B, and A activated, so B activated because A activated.\",\n        \"B caused A to activate, so A was not the cause of B activating.\"\n      ],\n      graphTrees: [\n        {nodeA: true, nodeB: true, nodeC: true, edgeAB: null, edgeBC: Mode.Backward, edgeAC: null,\n          edgeABActive: null, edgeBCActive: true, edgeACActive: null},\n        {nodeA: true, nodeB: true, nodeC: false, edgeAB: null, edgeBC: null, edgeAC: null,\n          edgeABActive: null, edgeBCActive: null, edgeACActive: null},\n        {nodeA: true, nodeB: true, nodeC: true, edgeAB: null, edgeBC: Mode.Backward, edgeAC: Mode.Forward,\n          edgeABActive: null, edgeBCActive: true, edgeACActive: true},\n        {nodeA: true, nodeB: true, nodeC: true, edgeAB: Mode.Forward, edgeBC: Mode.Forward, edgeAC: null,\n          edgeABActive: true, edgeBCActive: true, edgeACActive: null},\n        {nodeA: true, nodeB: true, nodeC: true, edgeAB: Mode.Forward, edgeBC: null, edgeAC: null,\n          edgeABActive: true, edgeBCActive: null, edgeACActive: null},\n        {nodeA: true, nodeB: true, nodeC: false, edgeAB: Mode.Backward, edgeBC: null, edgeAC: null,\n          edgeABActive: true, edgeBCActive: null, edgeACActive: null}\n      ]\n    });\n  }\n\n  addCompCheckExplanationSequenceInactive() {\n    this.addSubsequence(SeqCompCheckExplanations, {\n      explanation: new Explanation('C', 'A', false, true),\n      type: \"Inactive\",\n      devices: [\n        'Device 1 Inactive',\n        'Device 2 Inactive',\n        'Device 3 Inactive',\n        'Device 4 Inactive',\n        'Device 5 Inactive',\n        'Device 6 Inactive'\n      ],\n      solutions: [true, false, true, true, false, true],\n      messages: [\n        \"There is a working connection from C to A, so A would have activated if C had activated.\",\n          \"The connection from C to A is not working, so A would not have activated if C had activated.\",\n          \"There is a working connection from C to A, so A would have activated if C had activated\",\n          \"There is a working connection from C to B, and a working connection from B to A. This means A would have activated\" +\n          \" if C had activated. \",\n          \"The connection from B to A is not working, so A would not have activated, even if C had activated.\",\n          \"There is a working connection from C to A, so A would have activated if C had activated. \"\n      ],\n      graphTrees: [\n        {nodeA: false, nodeB: true, nodeC: false, edgeAB: null, edgeBC: null, edgeAC: Mode.Backward,\n          edgeABActive: null, edgeBCActive: null, edgeACActive: true},\n        {nodeA: false, nodeB: true, nodeC: false, edgeAB: null, edgeBC: null, edgeAC: Mode.Backward,\n          edgeABActive: null, edgeBCActive: null, edgeACActive: false},\n        {nodeA: false, nodeB: false, nodeC: false, edgeAB: Mode.Backward, edgeBC: null, edgeAC: Mode.Backward,\n          edgeABActive: true, edgeBCActive: null, edgeACActive: true},\n        {nodeA: false, nodeB: false, nodeC: false, edgeAB: Mode.Backward, edgeBC: Mode.Backward, edgeAC: null,\n          edgeABActive: true, edgeBCActive: true, edgeACActive: null},\n        {nodeA: false, nodeB: false, nodeC: false, edgeAB: Mode.Backward, edgeBC: Mode.Backward, edgeAC: null,\n          edgeABActive: false, edgeBCActive: true, edgeACActive: null},\n        {nodeA: false, nodeB: true, nodeC: false, edgeAB: Mode.Backward, edgeBC: Mode.Backward, edgeAC: Mode.Backward,\n          edgeABActive: false, edgeBCActive: false, edgeACActive: true}\n      ]\n    });\n    this.addSubsequence(SeqCompCheckExplanations, {\n      explanation: new Explanation('A', 'B', false, false),\n      type: \"Inactive Not\",\n      devices: [\n        'Device 1 Inactive Not',\n        'Device 2 Inactive Not',\n        'Device 3 Inactive Not',\n        'Device 4 Inactive Not',\n        'Device 5 Inactive Not',\n        'Device 6 Inactive Not'\n      ],\n      solutions: [false, true, true, false, false, true],\n      messages: [\n        \"There is a working connection from A to B, so B would have activated if A had activated.\",\n        \"The connection from A to B did not work, so B would not have activated, even if A had activated.\",\n        \"There are no connections between the nodes, so there is no reason why B would have activated if A had activated.\",\n        \"There is a working connection from A to C, and A working connection from C to B. This means B would have activated if A had \" +\n        \"activated. \",\n        \"There is a working connection from A to B, so B would have activated if A had activated.\",\n        \"Since there is no working connection going from A to B, B would not have activated, even if A had activated. \"\n      ],\n      graphTrees: [\n        {nodeA: false, nodeB: false, nodeC: false, edgeAB: Mode.Forward, edgeBC: Mode.Backward, edgeAC: null,\n          edgeABActive: true, edgeBCActive: true, edgeACActive: null},\n        {nodeA: false, nodeB: false, nodeC: true, edgeAB: Mode.Forward, edgeBC: null, edgeAC: null,\n          edgeABActive: false, edgeBCActive: null, edgeACActive: null},\n        {nodeA: false, nodeB: false, nodeC: true, edgeAB: null, edgeBC: null, edgeAC: null,\n          edgeABActive: null, edgeBCActive: null, edgeACActive: null},\n        {nodeA: false, nodeB: false, nodeC: false, edgeAB: null, edgeBC: Mode.Backward, edgeAC: Mode.Forward,\n          edgeABActive: null, edgeBCActive: true, edgeACActive: true},\n        {nodeA: false, nodeB: false, nodeC: true, edgeAB: Mode.Forward, edgeBC: Mode.Forward, edgeAC: Mode.Forward,\n          edgeABActive: true, edgeBCActive: true, edgeACActive: false},\n        {nodeA: false, nodeB: false, nodeC: true, edgeAB: Mode.Backward, edgeBC: Mode.Backward, edgeAC: Mode.Backward,\n          edgeABActive: true, edgeBCActive: false, edgeACActive: false}\n      ]\n    });\n  }\n\n\n  addWhatHappenedSequence() {\n    this.addSubsequence(SeqWhatHappened, {\n      deviceName: 'Bik',\n      day: 1,\n      description: <div>\n        Consider the above device. Suppose that on Day 1, all components activated.\n        The connection from A to B didn't work, so although B activated,\n        it was because B activated on its own and not because A activated it.\n        The connection from B to C did work, so B activated C.\n        <br/>\n        <br/>\n        When the robot says \"C activated because B activated\", this means that a connection from B to C,\n        either direct (B to C) or indirect (B to A and A to C), exists and worked on this day.\n        <br/>\n        <br/>\n        When the robot says \"B activated, but not because A activated\", this means that either\n        no connection exists from A to B, <b>or</b> that the connection exists but did not work on this day.\n      </div>,\n      edgeAB: Mode.Forward,\n      edgeBC: Mode.Forward,\n      edgeABActive: false,\n      edgeBCActive: true,\n      nodeA: true,\n      nodeB: true,\n      nodeC: true\n    });\n    this.addSubsequence(SeqWhatHappened, {\n      deviceName: 'Bik',\n      day: 2,\n      description: <div>\n        The robot may also give explanations about <b>inactive</b> components.\n        Suppose on Day 2, no components activated. However, this time, both the connection from A to B and the\n        connection from B to C worked.\n        This means B would have activated if A had activated, and C would have activated if B had activated.\n        C also would have activated had A activated, since A would have activated B.\n        <br/>\n        <br/>\n        When the robot says \"C would have activated if A had activated\", this means that a connection from A to C,\n        either direct (A to C) or indirect (A to B and B to C), exists and worked on this day.\n        <br/>\n        <br/>\n        When the robot says \"A would not have activated, even if B had activated\", this means that either\n        no connection exists from B to A, <b>or</b> that the connection exists but did not work on this day.\n      </div>,\n      edgeAB: Mode.Forward,\n      edgeBC: Mode.Forward,\n      edgeABActive: true,\n      edgeBCActive: true,\n      nodeA: false,\n      nodeB: false,\n      nodeC: false\n    });\n    this.addSubsequence(SeqWhatHappened, {\n      deviceName: 'Bik',\n      day: 3,\n      description: <div>\n        On Day 3, only component A activated. The connection from A to B didn't work, so A couldn't activate B.\n        The connection from B to C did work, so if B had activated, so would have C.\n        <br/><br/>\n        Recall that the robot will only give explanations about two active components or two inactive\n        components, <b>never about one active and one inactive component</b>.\n        Therefore, whenever only 1 or 2 components are active, as in this example,\n        the robot will only choose between two explanations.\n      </div>,\n      edgeAB: Mode.Forward,\n      edgeBC: Mode.Forward,\n      edgeABActive: false,\n      edgeBCActive: true,\n      nodeA: true,\n      nodeB: false,\n      nodeC: false\n    });\n    this.addSubsequence(SeqWhatHappened, {\n      deviceName: 'Vem',\n      day: 1,\n      description: \"Now, consider a new device, shown above. On Day 1, all components activated\" +\n          \" and both the connection from A to C and the connection from B to C worked.\" +\n          \" In this case, both A and B individually activated C, so the robot could explain\" +\n          \" either that C activated because A activated, or that C activated because B activated.\",\n      edgeBC: Mode.Forward,\n      edgeAC: Mode.Forward,\n      edgeACActive: true,\n      edgeBCActive: true,\n      nodeA: true,\n      nodeB: true,\n      nodeC: true\n    });\n  }\n\n  addCompCheckExplanationSequence() {\n    this.addSubsequence(SeqCompCheckExplanations, {\n      explanations: [\n        new Explanation('B', 'A', true, true),\n        new Explanation('C', 'B', false, false),\n        new Explanation('B', 'C', true, true),\n        new Explanation('B', 'C', true, false),\n        new Explanation('A', 'B', true, false),\n      ],\n      solutions: [true, false, true, false, true],\n      nodeA: true,\n      nodeB: true,\n      nodeC: true,\n      edgeAB: Mode.Backward,\n      edgeAC: Mode.Forward,\n      edgeABActive: true,\n      edgeACActive: true\n    });\n    this.addSubsequence(SeqCompCheckExplanations, {\n      explanations: [\n        new Explanation('B', 'C', false, false),\n        new Explanation('B', 'A', true, false),\n        new Explanation('A', 'C', false, true),\n        new Explanation('C', 'A', false, false),\n        new Explanation('A', 'B', true, false),\n      ],\n      solutions: [false, false, true, true, false],\n      nodeB: true,\n      edgeAB: Mode.Backward,\n      edgeAC: Mode.Forward,\n      edgeBC: Mode.Forward,\n      edgeABActive: false,\n      edgeACActive: true,\n      edgeBCActive: false\n    });\n    this.addSubsequence(SeqCompCheckExplanations, {\n      explanations: [\n        new Explanation('B', 'C', true, true),\n        new Explanation('C', 'A', true, true),\n        new Explanation('A', 'B', true, true),\n        new Explanation('C', 'A', true, false),\n        new Explanation('C', 'B', true, false),\n      ],\n      solutions: [false, false, true, false, false],\n      nodeA: true,\n      nodeB: true,\n      edgeAB: Mode.Forward,\n      edgeAC: Mode.Backward,\n      edgeBC: Mode.Backward,\n      edgeABActive: true,\n      edgeACActive: true,\n      edgeBCActive: false\n    });\n    this.addSubsequence(SeqCompCheckExplanations, {\n      explanations: [\n        new Explanation('C', 'B', false, true),\n        new Explanation('C', 'A', false, true),\n        new Explanation('B', 'C', false, true),\n        new Explanation('C', 'A', true, true),\n        new Explanation('A', 'B', false, false),\n        new Explanation('C', 'B', false, false),\n      ],\n      solutions: [false, true, false, false, true, true],\n      edgeAC: Mode.Backward,\n      edgeBC: Mode.Backward,\n      edgeACActive: true,\n      edgeBCActive: false\n    });\n  }\n\n}","import Sequence from \"../../misc/Sequence\";\nimport React from \"react\";\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport {Button} from \"primereact/button\";\n\n\nexport default class SeqExitSurvey1 extends Sequence {\n\n  state: {\n    general: string,\n  }\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      general: \"\"\n    }\n  }\n\n  onSubmit() {\n    this.props.data.recordQuestionResponse(this, 'general', this.state.general);\n    this.goToNext();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Exit Survey (1/3)</h1>\n        <p>\n          Please answer the following questions to complete the experiment.\n          <br/><br/>\n          What factors influenced how you decided to respond?\n          Do you have any questions or comments regarding the experiment?\n          <br/><br/>\n        </p>\n        <InputTextarea\n          rows={8}\n          cols={78}\n          value={this.state.general}\n          onChange={(e) => this.setState({general: e.target.value})} />\n\n        <div style={{paddingTop: 25, textAlign: 'right'}}>\n          <Button className=\"p-button-success\" label=\"Next\" icon=\"pi pi-arrow-right\" iconPos=\"right\"\n                  onClick={this.goToNext.bind(this)}/>\n        </div>\n      </div>\n    )\n  }\n}","import Sequence from \"../../misc/Sequence\";\nimport React, {createRef, RefObject} from \"react\";\nimport {InputNumber} from \"primereact/inputnumber\";\nimport SelectQuestion from \"../../components/survey/SelectQuestion\";\nimport {Toast} from \"primereact/toast\";\nimport {mapToObject} from \"../../misc/utils\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\nconst _ = require('lodash');\n\n\nconst questions = [\n  {\n    key: 'gender',\n    question: 'What is your gender?',\n    options: ['Male', 'Female', 'Non-binary', 'Other'],\n    multiSelect: false\n  },\n  {\n    key: 'race',\n    question: 'What is your race?',\n    options: ['White', 'Black/African American', 'American Indian/Alaska Native', 'Asian',\n      'Native Hawaiian/Pacific Islander', 'Multiracial', 'Other'],\n    multiSelect: false\n  },\n  {\n    key: 'ethnicity',\n    question: 'What is your ethnicity?',\n    options: ['Hispanic', 'Non-Hispanic'],\n    multiSelect: false\n  },\n]\n\nexport default class SeqExitSurvey2 extends Sequence {\n\n  refSelectQuestions: any;\n  refToast: RefObject<Toast>;\n\n  state: {[key: string]: any}\n\n  constructor(props: any) {\n    super(props);\n    this.state = mapToObject(questions, (q) => [q.key, null]);\n    this.state.age = null;\n    this.refToast = createRef();\n  }\n  onSubmit() {\n    if (_.filter(_.values(this.state), (e) => e === null).length > 0) {\n      this.refToast.current!.show({severity: 'error',\n                                    summary: 'Survey incomplete!',\n                                    detail: 'Please respond to all questions',\n                                    life: 5000\n                                  });\n    } else {\n      _.forEach(this.state, (value: any, key: string) =>\n        this.props.data.recordQuestionResponse(this, key, value));\n      this.goToNext();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Toast ref={this.refToast} />\n        <h1>Exit Survey (2/3)</h1>\n        <div className=\"grid\">\n          <div className=\"col-3\" style={{width: 275}}>\n            <p>\n              1. What is your age?\n            </p>\n          </div>\n          <div className=\"col-6\" style={{textAlign: 'justify'}}>\n            <InputNumber value={this.state.age}\n                         min={0}\n                         max={100}\n                         size={5}\n                         onChange={(e) => this.setState({age: e.value})}/>\n          </div>\n        </div>\n        {_.map(questions, (q: any, idx: number) => (\n          <div key={`q-container-${q.key}`}>\n            <hr style={{ backgroundColor: 'black', height: 3, marginTop: 4, marginBottom: 8}} />\n            <SelectQuestion\n              question={`${2+idx}. ${q.question}`}\n              options={q.options}\n              selected={this.state[q.key]}\n              multiSelect={q.multiSelect}\n              onChange={(v) => {\n                const state = {};\n                state[q.key] = v;\n                this.setState(state)\n              }}\n              questionWidth={275}/>\n          </div>\n        ))}\n\n        <div style={{textAlign: \"right\"}}>\n          <ButtonFooter onNext={this.onSubmit.bind(this)}/>\n        </div>\n      </div>\n    )\n  }\n}","import React, {createRef, RefObject} from 'react';\nimport Sequence from \"../../misc/Sequence\";\nimport SelectQuestion from \"../../components/survey/SelectQuestion\";\nimport {Toast} from \"primereact/toast\";\nimport ButtonFooter from \"../../components/ButtonFooter\";\nconst _ = require('lodash');\n\nconst questions = [\n  {\n    key: \"education\",\n    question: \"What is your highest level of education, including currently pursuing?\",\n    options: [\n      \"Have not graduated high school\",\n      \"High school graduate or equivalent\",\n      \"Associate's degree\",\n      \"Bachelor's degree\",\n      \"Master's degree\",\n      \"Doctoral degree\",\n    ],\n    multiSelect: false\n  },\n  {\n    key: \"math\",\n    question: \"Which of the following topics have you taken a course in? Select all that apply.\",\n    options: [\n      \"Middle/high school algebra\",\n      \"Middle/high school geometry\",\n      \"Trigonometric functions\",\n      \"Single-variable calculus\",\n      \"Multi-variable calculus\",\n      \"Linear algebra\",\n      \"Probability & statistics\",\n      \"Discrete mathematics\",\n      \"Formal logic\",\n      \"Computer science or programming\",\n    ],\n    multiSelect: true\n  }\n]\n\nexport default class SeqExitSurvey3 extends Sequence {\n\n  refSelectQuestions: any;\n  refToast: RefObject<Toast>;\n\n  state: {[key: string]: any}\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      education: null,\n      math: []\n    }\n    this.refToast = createRef();\n  }\n\n  onSubmit() {\n    if (this.state.education == null) {\n      this.refToast.current!.show({severity: 'error',\n        summary: 'Survey incomplete!',\n        detail: 'Please indicate your highest level of education.',\n        life: 5000\n      });\n    } else {\n      _.forEach(this.state, (value: any, key: string) =>\n        this.props.data.recordQuestionResponse(this, key, value));\n      this.goToNext();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Toast ref={this.refToast} />\n        <h1>Exit Survey (3/3)</h1>\n\n        {_.map(questions, (q: any, idx: number) => (\n          <div key={`q-container-${q.key}`}>\n            { idx > 0 && <hr style={{ backgroundColor: 'black', height: 3, marginTop: 4, marginBottom: 8}} /> }\n            <SelectQuestion\n              question={`${1+idx}. ${q.question}`}\n              options={q.options}\n              selected={this.state[q.key]}\n              multiSelect={q.multiSelect}\n              onChange={(v) => {\n                const state = {};\n                state[q.key] = v;\n                this.setState(state)\n              }}\n              questionWidth={275}/>\n          </div>\n        ))}\n\n        <div style={{textAlign: \"right\"}}>\n          <ButtonFooter onNext={this.onSubmit.bind(this)}/>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport Sequence from \"../../misc/Sequence\";\nimport SeqExitSurvey1 from \"./SeqExitSurvey1\";\nimport SeqExitSurvey2 from \"./SeqExitSurvey2\";\nimport SeqExitSurvey3 from \"./SeqExitSurvey3\";\n\n\nexport default class SeqExitSurvey extends Sequence {\n\n  constructor(props: any) {\n    super(props);\n    this.addSubsequence(SeqExitSurvey1);\n    this.addSubsequence(SeqExitSurvey2);\n    this.addSubsequence(SeqExitSurvey3);\n  }\n\n  onGoToNext() {\n    this.props.data.post(false);\n  }\n}","import React from 'react';\nimport Sequence from \"../misc/Sequence\";\nimport {toUSD} from \"../misc/utils\";\nimport {CONFIG} from \"../config\";\nimport ButtonFooter from \"../components/ButtonFooter\";\n\n\nexport default class SeqTrialsStart extends Sequence {\n\n  render() {\n    return (\n      <div>\n        <h1>Instructions</h1>\n\n        <p>\n          Thank you for completing the comprehension checks.\n          You are now ready to begin the experiment.\n          <br/><br/>\n          You will get to see 6 different device models. Each of 10 companies will receive one device of each model.\n          Each time a company tests their device, you will be able to indicate your current best guess for\n          how the model works by adjusting the arrows between the components.\n          <br/><br/>\n          After you've seen a certain model in action for 10 different companies, we will show you how the model actually works.\n          For each causal connection that you correctly identified, you will receive a bonus\n          of {toUSD(CONFIG.reward_per_edge)}.\n          You will also get {toUSD(CONFIG.reward_per_edge)} on every company for which you correctly identified\n          that there is no causal connection between two components.\n          Because you get a bonus on for any given company, <b>you will get a higher bonus overall\n          the earlier you figure out how the model works.</b>\n          <br/><br/>\n          Click Next to begin the experiment.\n          <br/><br/>\n          <ButtonFooter onBack={this.goToPrev} onNext={this.goToNext}/>\n        </p>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport Sequence from \"../misc/Sequence\";\nimport ButtonFooter from \"../components/ButtonFooter\";\n\n\nexport default class SeqConditions extends Sequence {\n\n  render() {\n    const showActivations = this.props.data.experimentData.conditions.showActivations;\n    const showExplanations = this.props.data.experimentData.conditions.showExplanations;\n\n    return (\n      <div>\n        <h1>Testing Devices</h1>\n\n        {/* Both condition */}\n        {showActivations && showExplanations &&\n          <p>\n            Fortunately, it turns out that every company has access to the robot!\n            <br/><br/>\n            The robot will always provide an explanation for what happened for every device.\n          </p>\n        }\n\n        {/* Activation only condition */}\n        {showActivations && !showExplanations &&\n            <p>\n              Unfortunately, it turns out that none of the companies have access to the robot!\n              <br/><br/>\n              You will not see an explanation for what happened for any device.\n            </p>\n        }\n\n        {/* Explanation only condition */}\n        {!showActivations && showExplanations &&\n            <p>\n              Unfortunately, it turns out that all of the devices have defective lights, and so\n              active nodes look as if they are inactive!\n              Although the activations are no longer visible by their colors,\n              every company has access to the robot, which is still able to detect which components activated.\n              <br/><br/>\n              You will not be able to see which components activated,\n              but the robot will always provide an explanation for what happened for every device.\n            </p>\n        }\n        <br/><br/>\n        <ButtonFooter onBack={this.goToPrev} onNext={this.goToNext}/>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport Sequence from \"../misc/Sequence\";\nimport SeqCausalGraphInference from \"./SeqCausalGraphInference\";\nimport SeqEnd from \"./SeqEnd\";\nimport SeqIntroduction from \"./introduction/SeqIntroduction\";\nimport SeqExitSurvey from \"./exit_survey/SeqExitSurvey\";\nimport SeqTrialsStart from \"./SeqTrialsStart\";\nimport SeqConditions from \"./SeqConditions\";\nimport {CONFIG} from \"../config\";\nimport {getUrlParams} from \"../misc/utils\";\n\nclass SeqMain extends Sequence {\n\n  constructor(props: any) {\n    super(props);\n\n    if (!(CONFIG.dev_mode && getUrlParams()['skipIntro'])) {\n      this.addSubsequence(SeqIntroduction);\n    }\n    this.addSubsequence(SeqTrialsStart);\n    this.addSubsequence(SeqConditions);\n\n    for (let trialSet of props.data.experimentData.trialSets) {\n      this.addSubsequence(SeqCausalGraphInference,\n        {trialSet: trialSet,\n          key: `seqCGI_${trialSet.setIndex}`});\n    }\n    this.addSubsequence(SeqExitSurvey);\n    this.addSubsequence(SeqEnd);\n  }\n}\n\nexport default SeqMain;","import {ExperimentData} from \"./serviceLayer\";\nimport {Mode} from \"../components/graph/Edge\";\nimport {httpPost, now, sleep} from \"./utils\";\nimport Sequence from \"./Sequence\";\nimport {CONFIG} from \"../config\";\n\nconst _ = require('lodash');\n\n\nexport interface SessionParams {\n  prolificPid: string\n  studyId: string\n  sessionId: string\n}\n\nexport interface TrialResponse {\n  setIndex: number\n  obsIndex: number\n  edgeAB: Mode\n  edgeAC: Mode\n  edgeBC: Mode\n  responseTime: number\n}\n\nexport class Data {\n\n  startTime: string\n  sessionParams: any;\n  experimentData: ExperimentData;\n  trialResponses: TrialResponse[];\n  questionResponses: any;\n  sequenceTimestamps: {timestamp: string, sequence: any}[];\n  sequenceStates: {[key: string]: any};\n\n  constructor(sessionParams: SessionParams, experimentData: ExperimentData) {\n    this.startTime = now();\n    this.sessionParams = sessionParams;\n    this.experimentData = experimentData;\n    this.trialResponses = [];\n    this.questionResponses = {};\n    this.sequenceStates = {};\n    this.sequenceTimestamps = [];\n\n    // Call post() every interval.\n    setInterval(function() { this.post(false); }.bind(this), CONFIG.post_data_interval);\n  }\n\n  /**\n   * Posts the current Data snapshot to the server.\n   * wait: whether or not to stall the program until a positive response is received\n   *       If false, proceeds asynchronously\n   */\n  async post(wait: boolean) {\n    const filename = `${this.sessionParams.prolificPid}.json`;\n    await httpPost(filename, this, wait);\n  }\n\n  saveSequenceState(sequence: Sequence) {\n    const key = sequence.getSequenceKey();\n    this.sequenceStates[key] = sequence.createStateData();\n  }\n\n  loadSequenceState(sequence: Sequence) {\n    const key = sequence.getSequenceKey();\n    return key in this.sequenceStates ? this.sequenceStates[key] : null;\n  }\n\n  recordQuestionResponse(sequence: Sequence, key: string, value: any) {\n    const seq_params = sequence.getParams();\n    const seq_key = sequence.getSequenceKey();\n    if (!(seq_key in this.questionResponses)) {\n      this.questionResponses[seq_key] = {_sequence: seq_params};\n    }\n    if (!(key in this.questionResponses[seq_key])) {\n      this.questionResponses[seq_key][key] = [];\n    }\n    this.questionResponses[seq_key][key].push({_timestamp: now(), response: value});\n  }\n\n  /**\n   * Returns a matrix of shape [numSets, numTrials] indicating the number of correctly identified edges at edge trial.\n   * The last array may be short if the current set is incomplete.\n   */\n  getNumEdgesSolved() {\n    let solved = [];\n    let seqSolved = [];\n    let lastSetIndex = 0;\n    for (let response of this.trialResponses) {\n      if (response.setIndex !== lastSetIndex) {\n        solved.push(seqSolved);\n        seqSolved = [];\n      }\n\n      let trialSet = this.experimentData.trialSets[response.setIndex];\n      let edgeAB = Number(trialSet.edgeAB === response.edgeAB);\n      let edgeAC = Number(trialSet.edgeAC === response.edgeAC);\n      let edgeBC = Number(trialSet.edgeBC === response.edgeBC);\n      let numSolved = edgeAB + edgeAC + edgeBC;\n      seqSolved.push(numSolved);\n      lastSetIndex = response.setIndex;\n    }\n    solved.push(seqSolved);\n    return solved;\n  }\n\n  /**\n   * Returns the cumulative sum of all correctly identified edges across all sets.\n   */\n  getTotalEdgesSolved() {\n    const numSolved = this.getNumEdgesSolved();\n    return _.sum(_.map(numSolved, (a: any) => _.sum(a) ));\n  }\n}","import {httpGet, loadJSON, randomWords, timeFormat} from \"./utils\";\nimport {CONFIG, Config, getFlaskURL, getPostURL} from \"../config\";\nimport {sleep} from \"./utils\"\nimport {Mode} from \"../components/graph/Edge\";\nimport moment from \"moment\";\nimport {Explanation} from \"./Explanation\";\nconst _ = require('lodash');\n\nconst graphNames = _.shuffle(randomWords);\n\nexport interface ExperimentData {\n  conditions: {\n    showActivations: boolean,\n    showExplanations: boolean\n  }\n  graphParams: {\n    pRoot: number,\n    pNonRoot: number,\n    pEdge: number\n  }\n  tutorial: TrialSet\n  trialSets: TrialSet[]\n}\n\nexport interface TrialSet {\n  setIndex: number\n  graphType: string\n  graphName: string\n  edgeAB: Mode\n  edgeAC: Mode\n  edgeBC: Mode\n  observations: Observation[]\n}\n\nexport interface Observation {\n  obsIdx: number\n  activations: {[key: string]: boolean}\n  detachments: string[]\n  explanation: Explanation\n}\n\nfunction loadTrialSet(rawTrials: any, trialIdx: number) {\n  let edgeAB = Mode.None;\n  let edgeAC = Mode.None;\n  let edgeBC = Mode.None;\n  for (let edge of rawTrials.edges) {\n    if (edge[0] === 'A' && edge[1] === 'B') {\n      edgeAB = Mode.Forward;\n    } else if (edge[0] === 'B' && edge[1] === 'A') {\n      edgeAB = Mode.Backward;\n    } else if (edge[0] === 'A' && edge[1] === 'C') {\n      edgeAC = Mode.Forward;\n    } else if (edge[0] === 'C' && edge[1] === 'A') {\n      edgeAC = Mode.Backward;\n    } else if (edge[0] === 'B' && edge[1] === 'C') {\n      edgeBC = Mode.Forward;\n    } else if (edge[0] === 'C' && edge[1] === 'B') {\n      edgeBC = Mode.Backward;\n    }\n  }\n\n  let observations = _.map(rawTrials.observations, (obs: any, idx: number) => {\n    obs.obsIdx = idx;\n    obs.explanation = new Explanation(obs.explanation.node1,\n                                      obs.explanation.node2,\n                                      obs.explanation.nodes_active,\n                                      obs.explanation.cause);\n    return obs;\n  });\n  return {\n    setIndex: trialIdx,\n    graphType: rawTrials.graph_type,\n    graphName: graphNames[trialIdx],\n    edgeAB: edgeAB,\n    edgeAC: edgeAC,\n    edgeBC: edgeBC,\n    observations: observations\n  }}\n\n/**\n * Loads all the information needed to run the experiment, such as stimuli data.\n */\nexport async function getNewExperimentData(prolificPid: string): Promise<ExperimentData> {\n  const data: any = await httpGet(`${getFlaskURL()}?seed=${prolificPid}`);\n\n  const trialSets: TrialSet[] = _.map(_.shuffle(data.trials), loadTrialSet);\n  const tutorial: TrialSet = loadTrialSet(data.tutorial, 0);\n  const graphParams = {\n    pRoot: data.graph_params.p_root,\n    pNonRoot: data.graph_params.p_nonroot,\n    pEdge: data.graph_params.p_edge\n  };\n  return {\n    conditions: data.conditions,\n    graphParams: graphParams,\n    tutorial: tutorial,\n    trialSets: trialSets\n  }\n}","import React from 'react';\nimport \"primereact/resources/themes/bootstrap4-light-blue/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\n\nimport './App.css';\nimport SeqMain from \"./sequences/SeqMain\";\nimport {getUrlParams, parseString, sleep} from \"./misc/utils\";\nimport {Data} from \"./misc/Data\";\nimport {getNewExperimentData} from \"./misc/serviceLayer\";\nimport {CONFIG, loadConfig} from \"./config\";\nimport SeqExamples from \"./sequences/inactive/SeqExamples\";\n\nexport default class App extends React.Component<any, any> {\n  data: Data;\n\n  state: {\n    dataLoaded: boolean\n  };\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      dataLoaded: false\n    };\n  }\n\n  async componentDidMount() {\n    await loadConfig();\n    this.setState({configLoaded: true});\n\n    const urlParams = getUrlParams();\n    const sessionParams = {\n      prolificPid: urlParams['PROLIFIC_PID'],\n      studyId: urlParams['STUDY_ID'],\n      sessionId: urlParams['SESSION_ID']\n    }\n    console.log(\"Loading data\");\n    this.data = new Data(sessionParams, await getNewExperimentData(sessionParams.prolificPid));\n    if (CONFIG.dev_mode) {\n      for (let [key, value] of Object.entries(urlParams)) {\n        if (key in this.data.experimentData.conditions) {\n          this.data.experimentData.conditions[key] = value;\n        }\n      }\n      console.log(CONFIG);\n      console.log(urlParams);\n      console.log(this.data);\n    }\n\n    await this.data.post(true);\n    this.setState({dataLoaded: true});\n    console.log(this.data);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.dataLoaded ? <SeqMain data={this.data}/> : \"Loading\"}\n        {/*SeqExamples is just for making figures.*/}\n        {/*{this.state.dataLoaded ? <SeqExamples data={this.data}/> : \"Loading\"}*/}\n        \n      </div>\n    );\n  }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, {ComponentProps} from \"react\";\nimport {Group, Arrow, Line} from \"react-konva\";\n\n\ninterface Props {\n  point1: number[],\n  point2: number[],\n  length: number,\n  width: number,\n  mode?: Mode,\n  enableOnClick?: boolean\n}\n\nexport enum Mode {\n  None = 'none',\n  Forward = 'forward',\n  Backward = 'backward'\n}\n\nexport default class Edge extends React.Component<ComponentProps<any>> {\n\n  state: {\n    mode: Mode\n    opacity1: number\n    opacity2: number\n  }\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      mode: props.mode ? props.mode : Mode.None,\n      opacity1: this.props.enableOnClick ? .1 : 0,\n      opacity2: this.props.enableOnClick ? .1 : 0\n    };\n    this.onClick = this.onClick.bind(this);\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n  }\n\n  onClick(closerTo1: boolean) {\n    if (this.props.enableOnClick) {\n      let mode = Mode.None;\n      if (closerTo1 && this.state.mode !== Mode.Backward) {\n        mode = Mode.Backward\n      }\n      else if (!closerTo1 && this.state.mode !== Mode.Forward) {\n        mode = Mode.Forward\n      }\n      this.setState({mode: mode});\n    }\n  }\n\n  onMouseEnter(closerTo1: boolean) {\n    if (this.props.enableOnClick) {\n      if (closerTo1) {\n        this.setState({ opacity1: .3 });\n      } else {\n        this.setState({ opacity2: .3 });\n      }\n    }\n  }\n\n  onMouseLeave() {\n    if (this.props.enableOnClick) {\n      this.setState({\n        opacity1: .1,\n        opacity2: .1\n      })\n    }\n  }\n\n  render() {\n    const point1 = this.state.mode === Mode.Forward ? this.props.point1 : this.props.point2;\n    const point2 = this.state.mode === Mode.Forward ? this.props.point2 : this.props.point1;\n    const midPoint = [\n      (this.props.point1[0] + this.props.point2[0])/2,\n      (this.props.point1[1] + this.props.point2[1])/2\n    ];\n\n    let x2 = point2[0] - point1[0];\n    let y2 = point2[1] - point1[1];\n\n    // apply length scaling\n    let x1 = point1[0] + .5 * (1 - this.props.length) * x2;\n    let y1 = point1[1] + .5 * (1 - this.props.length) * y2;\n    x2 = this.props.length * x2;\n    y2 = this.props.length * y2;\n\n    return (\n      <Group>\n        <Arrow\n          x={x1}\n          y={y1}\n          points={[0, 0, x2, y2]}\n          pointerLength={this.props.width}\n          pointerWidth={this.props.width}\n          fill={'black'}\n          stroke={'black'}\n          strokeWidth={this.props.width}\n          opacity={this.state.mode === Mode.None ? 0 : 1}\n        />\n        <Line\n          points={[this.props.point1[0], this.props.point1[1], midPoint[0], midPoint[1]]}\n          stroke={'black'}\n          opacity={this.state.opacity1}\n          strokeWidth={3*this.props.width}\n          onClick={() => this.onClick(true)}\n          onMouseEnter={() => this.onMouseEnter(true)}\n          onMouseLeave={this.onMouseLeave}\n        />\n        <Line\n          points={[midPoint[0], midPoint[1], this.props.point2[0], this.props.point2[1]]}\n          stroke={'black'}\n          opacity={this.state.opacity2}\n          strokeWidth={3*this.props.width}\n          onClick={() => this.onClick(false)}\n          onMouseEnter={() => this.onMouseEnter(false)}\n          onMouseLeave={this.onMouseLeave}\n        />\n      </Group>\n    )\n  }\n}"],"sourceRoot":""}